import org.apache.spark.sql.functions._
import org.apache.spark.sql._
import java.util.concurrent.Executors



spark.conf.set("spark.streaming.backpressure.enabled","true")

//the maximum rate (in messages per second) at which each Kafka partition will be read by this direct API
spark.conf.set("spark.streaming.kafka.maxRatePerPartition", 10000)

spark.conf.set("spark.streaming.backpressure.pid.minRate", 500)




val df = 
  spark.readStream
    .format("kafka")
    .option("kafka.bootstrap.servers", "kafka-odspoc.westeurope.azurecontainer.io:9092")
 //.option("kafka.bootstrap.servers", "20.103.231.27:9094")
 //   .option("subscribe", "poc1")     
 //   .option("subscribe", "dhlpocboundstreamp10")     
    .option("subscribe", "dhlpocboundp10,dhlpocboundp101,dhlpocboundp102")     
 // .option("subscribe", "dhlpocboundp10")     
  //  .option("subscribe", "dhlpocboundp1_t1,dhlpocboundp1_t2,dhlpocboundp1_t3")     
    .option("startingOffsets", "earliest")  
 //   .option("startingOffsets", "latest")  
    .option("minPartitions", "25")  
    .option("maxOffsetsPerTrigger", "5000")  //How many records I read max in one Batch execution
    .option("failOnDataLoss", "true")
    .load()

val dfCast = df.selectExpr("CAST(value AS STRING)")
//plainXml(dfCast)
val dfWithPk = addHashColumn(dfCast, "PK")

sendToDatabase(dfWithPk)




def sendToDatabase(df: DataFrame) = {
  df
    .writeStream
    .outputMode("append")
    .foreachBatch { (df: DataFrame, batchId: Long) =>
      transformDf(df)
    }
    .start()
}


case class SinkLoader(df: DataFrame, writeToDbFunction: DataFrame => Unit) {
  def load() {
    writeToDbFunction(df)
  }
}



def transformDf(df: DataFrame) = {
  val sinks = Seq(
     SinkLoader(df, oneTableOnly), 
  // SinkLoader(df, additionalStatusCode), 
  /*  SinkLoader(df, canonicalTrackEvent),
    SinkLoader(df, canonicalTrackEventNotificationHeader),
    SinkLoader(df, computedRouteNode),
    SinkLoader(df, detailSourceInformation),
    SinkLoader(df, identifier),
    SinkLoader(df, messageHeader),
    SinkLoader(df, notificationType),
    SinkLoader(df, packageBatchCard),
    SinkLoader(df, packageBatchCardPartnerInformation),
    SinkLoader(df, packageBatchCardRoutingInformation),
    SinkLoader(df, packageBatchCardValueAddedService),
    SinkLoader(df, partnerInformation),
    SinkLoader(df, partnerRoutingInformation),
    SinkLoader(df, sollwegEdge) */
  ).par
  sinks.foreach(_.load)
}






def writeToSQLDB(df: DataFrame, dbtable: String) = {
  val url = "jdbc:sqlserver://odspocdb.database.windows.net:1433;databaseName=ODSPOCDB"
  val user = "odspocdbservadm"
  val password = "pM6ccktz3keuM5m"


  df.write
      .format("jdbc")
      .mode("append")
      .option("url", url)
      .option("dbtable", dbtable)
      .option("user", user)
      .option("password", password)
      .option("encrypt", "true")
      .option("hostNameInCertificate", "*.database.windows.net")
      .save()  
  
}



/*def writeToSQLDB(df: DataFrame, dbtable: String) = {
  val url = "jdbc:sqlserver://odspocdb.database.windows.net:1433;databaseName=ODSPOCDB"
  val user = "odspocdbservadm"
  val password = "pM6ccktz3keuM5m"
 /* val url = "jdbc:sqlserver://odcpocdbhpdb.database.windows.net:1433;database=odspocdbsvhp;"
  val user = "admin_poc"
  val password = "a$72mNma$72mNma$72mNm"  */

  df.write
      .format("jdbc")
      .mode("append")
      .option("url", url)
      .option("dbtable", dbtable)
      .option("user", user)
      .option("password", password)
      .option("encrypt", "true")
      .option("hostNameInCertificate", "*.database.windows.net")
      .save()  
  
} */




  



def oneTableOnly(df: DataFrame) = {
  val df_temp = df
    .withColumn("ADDITIONAL_STATUS_CODE_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode/@type')"))
    .withColumn("ADDITIONAL_STATUS_CODE_TYPE",concat_ws(",",col("ADDITIONAL_STATUS_CODE_TYPE")))
    .withColumn("ADDITIONAL_STATUS_CODE_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode/@value')"))
    .withColumn("ADDITIONAL_STATUS_CODE_VALUE",concat_ws(",",col("ADDITIONAL_STATUS_CODE_VALUE")))
    .withColumn("CTE_ID", col("PK"))
    .withColumn("DateCreated", lit(null))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "ASC_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.ADDITIONAL_STATUS_CODES")
}

/*sendToDatabase(dfWithPk)

def plainXml(df: DataFrame) = {
  val df_temp = df.withColumnRenamed("value","XMLSTRING")
  sendToDatabase(df_temp, "PICKUP_TO_DELIVERY.PLAIN_XML1")
}
*/

def additionalStatusCode(df: DataFrame) = {
  val df_temp = df
    .withColumn("ADDITIONAL_STATUS_CODE_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode/@type')"))
    .withColumn("ADDITIONAL_STATUS_CODE_TYPE",concat_ws(",",col("ADDITIONAL_STATUS_CODE_TYPE")))
    .withColumn("ADDITIONAL_STATUS_CODE_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode/@value')"))
    .withColumn("ADDITIONAL_STATUS_CODE_VALUE",concat_ws(",",col("ADDITIONAL_STATUS_CODE_VALUE")))
    .withColumn("CTE_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "ASC_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.ADDITIONAL_STATUS_CODES")
}




def canonicalTrackEvent(df: DataFrame) = {
  val df_temp = df
    .withColumn("EVENT_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/id/text()')"))
    .withColumn("EVENT_ID",concat_ws(",",col("EVENT_ID")))
    .withColumn("CREATION_TIMESTAMP", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationTimestamp/text()')"))
    .withColumn("CREATION_TIMESTAMP",concat_ws(",",col("CREATION_TIMESTAMP")))
    .withColumn("HASH_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/hashValue/text()')"))
    .withColumn("HASH_VALUE",concat_ws(",",col("HASH_VALUE")))
    .withColumn("PRIMARY_CRITERIA", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/primaryCriteriaEventClassification/text()')"))
    .withColumn("PRIMARY_CRITERIA",concat_ws(",",col("PRIMARY_CRITERIA")))
    .withColumn("SECONDARY_CRITERIA", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/secondaryCriteriaEventClassification/text()')"))
    .withColumn("SECONDARY_CRITERIA",concat_ws(",",col("SECONDARY_CRITERIA")))
    .withColumn("PALS_STATUS",lit(""))
    // .withColumn("PALS_STATUS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode[@type='PALS_STATUS']/@value')"))
    // .withColumn("PALS_STATUS",concat_ws(",",col("PALS_STATUS")))
    .withColumn("FAKE_EVENT_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/fakeEvent/text()')"))
    .withColumn("FAKE_EVENT_FLAG",concat_ws(",",col("FAKE_EVENT_FLAG")))
    .withColumn("KIND_OF_EVENT_ZINS",lit(""))
    // .withColumn("KIND_OF_EVENT_ZINS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode[@type='EVENT_ART_ZINS']/@value')"))
    // .withColumn("KIND_OF_EVENT_ZINS",concat_ws(",",col("KIND_OF_EVENT_ZINS")))
    .withColumn("KIND_OF_EVENT_SOLLWEG",lit(""))
    // .withColumn("KIND_OF_EVENT_SOLLWEG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode[@type='EVENT_ART_SOLLWEG']/@value')"))
    // .withColumn("KIND_OF_EVENT_SOLLWEG",concat_ws(",",col("KIND_OF_EVENT_SOLLWEG")))
    .withColumn("SOLLWEG_EXCEPTION",lit(""))
    // .withColumn("SOLLWEG_EXCEPTION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode[@type='SOLLWEG_AUSNAHME_CODE']/@value')"))
    // .withColumn("SOLLWEG_EXCEPTION",concat_ws(",",col("SOLLWEG_EXCEPTION")))
    .withColumn("DPAG_BARCODE",lit(""))
    // .withColumn("DPAG_BARCODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode[@type='DPAG_KENNUNG']/@value')"))
    // .withColumn("DPAG_BARCODE",concat_ws(",",col("DPAG_BARCODE")))
    .withColumn("PRODUCTION_FLAG",lit(""))
    // .withColumn("PRODUCTION_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode[@type='PRODUCTION_FLAG']/@value')"))
    // .withColumn("PRODUCTION_FLAG",concat_ws(",",col("PRODUCTION_FLAG")))
    .withColumn("READING_POST_NUMBER_REQUESTED",lit(""))
    // .withColumn("READING_POST_NUMBER_REQUESTED", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode[@type='LESUNG_POSTNUMMER_ANGEFORDERT']/@value')"))
    // .withColumn("READING_POST_NUMBER_REQUESTED",concat_ws(",",col("READING_POST_NUMBER_REQUESTED")))
    .withColumn("IS_OBSERVATION_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/isObservation/text()')"))
    .withColumn("IS_OBSERVATION_FLAG",concat_ws(",",col("IS_OBSERVATION_FLAG")))
    .withColumn("ADDITIONAL_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/text()')"))
    .withColumn("ADDITIONAL_INFORMATION",concat_ws(",",col("ADDITIONAL_INFORMATION")))
    .withColumn("PARENT_CONTAINER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/parentContainerInformation/containerType/text()')"))
    .withColumn("PARENT_CONTAINER_TYPE",concat_ws(",",col("PARENT_CONTAINER_TYPE")))
    .withColumn("PARENT_CONTAINER_IDENTIFIER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/parentContainerInformation/containerIdentifier/@type')"))
    .withColumn("PARENT_CONTAINER_IDENTIFIER_TYPE",concat_ws(",",col("PARENT_CONTAINER_IDENTIFIER_TYPE")))
    .withColumn("PARENT_CONTAINER_IDENTIFIER_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/parentContainerInformation/containerIdentifer/@value')"))
    .withColumn("PARENT_CONTAINER_IDENTIFIER_VALUE",concat_ws(",",col("PARENT_CONTAINER_IDENTIFIER_VALUE")))
    .withColumn("PARENT_ADDITIONAL_CONTAINER_IDENTIFIER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/parentContainerInformation/additionalContainerIdentifier/@type')"))
    .withColumn("PARENT_ADDITIONAL_CONTAINER_IDENTIFIER_TYPE",concat_ws(",",col("PARENT_ADDITIONAL_CONTAINER_IDENTIFIER_TYPE")))
    .withColumn("PARENT_ADDITIONAL_CONTAINER_IDENTIFIER_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/parentContainerInformation/additionaContainerIdentifer/@value')"))
    .withColumn("PARENT_ADDITIONAL_CONTAINER_IDENTIFIER_VALUE",concat_ws(",",col("PARENT_ADDITIONAL_CONTAINER_IDENTIFIER_VALUE")))
    .withColumn("PARENT_CONTAINER_TIMESTAMP", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/parentContainerInformation/timestamp/text()')"))
    .withColumn("PARENT_CONTAINER_TIMESTAMP",concat_ws(",",col("PARENT_CONTAINER_TIMESTAMP")))
    .withColumn("EVENT_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/type/text()')"))
    .withColumn("EVENT_TYPE",concat_ws(",",col("EVENT_TYPE")))
    .withColumn("MESSAGE_UUID",lit(""))
    // .withColumn("MESSAGE_UUID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/identifier[@type='MESSAGE_UUID']/@value')"))
    // .withColumn("MESSAGE_UUID",concat_ws(",",col("MESSAGE_UUID")))
    .withColumn("MESSAGE_SENDER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/sender/text()')"))
    .withColumn("MESSAGE_SENDER",concat_ws(",",col("MESSAGE_SENDER")))
    .withColumn("MESSAGE_RECIPIENT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/recipient/text()')"))
    .withColumn("MESSAGE_RECIPIENT",concat_ws(",",col("MESSAGE_RECIPIENT")))
    .withColumn("MESSAGE_CREATION_TS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/creationTimestamp/text()')"))
    .withColumn("MESSAGE_CREATION_TS",concat_ws(",",col("MESSAGE_CREATION_TS")))
    .withColumn("MESSAGE_IS_TEST_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/isTest/text()')"))
    .withColumn("MESSAGE_IS_TEST_FLAG",concat_ws(",",col("MESSAGE_IS_TEST_FLAG")))
    .withColumn("MESSAGE_ADDITIONAL_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/additionalInformation/text()')"))
    .withColumn("MESSAGE_ADDITIONAL_INFORMATION",concat_ws(",",col("MESSAGE_ADDITIONAL_INFORMATION")))
    .withColumn("PMES_SEQUENCE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/additionalInformation/pmesSequenceNumber/text()')"))
    .withColumn("PMES_SEQUENCE_NUMBER",concat_ws(",",col("PMES_SEQUENCE_NUMBER")))
    .withColumn("TRIGGERING_MESSAGE_UUID",lit(""))
    // .withColumn("TRIGGERING_MESSAGE_UUID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/identifier[@type='MESSAGE_UUID']/@value')"))
    // .withColumn("TRIGGERING_MESSAGE_UUID",concat_ws(",",col("TRIGGERING_MESSAGE_UUID")))
    .withColumn("TRIGGERING_MESSAGE_SENDER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/sender/text()')"))
    .withColumn("TRIGGERING_MESSAGE_SENDER",concat_ws(",",col("TRIGGERING_MESSAGE_SENDER")))
    .withColumn("TRIGGERING_MESSAGE_RECIPIENT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/recipient/text()')"))
    .withColumn("TRIGGERING_MESSAGE_RECIPIENT",concat_ws(",",col("TRIGGERING_MESSAGE_RECIPIENT")))
    .withColumn("TRIGGERING_MESSAGE_CREATION_TS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/creationTimestamp/text()')"))
    .withColumn("TRIGGERING_MESSAGE_CREATION_TS",concat_ws(",",col("TRIGGERING_MESSAGE_CREATION_TS")))
    .withColumn("TRIGGERING_MESSAGE_IS_TEST_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/isTest/text()')"))
    .withColumn("TRIGGERING_MESSAGE_IS_TEST_FLAG",concat_ws(",",col("TRIGGERING_MESSAGE_IS_TEST_FLAG")))
    .withColumn("DSTID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/dstId/text()')"))
    .withColumn("DSTID",concat_ws(",",col("DSTID")))
    .withColumn("DATA_SOURCE_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/name/text()')"))
    .withColumn("DATA_SOURCE_NAME",concat_ws(",",col("DATA_SOURCE_NAME")))
    .withColumn("DATA_SOURCE_VERSION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/version/text()')"))
    .withColumn("DATA_SOURCE_VERSION",concat_ws(",",col("DATA_SOURCE_VERSION")))
    .withColumn("DETAIL_SOURCE_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation/text()')"))
    .withColumn("DETAIL_SOURCE_INFORMATION",concat_ws(",",col("DETAIL_SOURCE_INFORMATION")))
    .withColumn("TARGET_TYPE_SOURCE",lit(""))
    // .withColumn("TARGET_TYPE_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='ZIELKENNUNG_QUELLE']/@value')"))
    // .withColumn("TARGET_TYPE_SOURCE",concat_ws(",",col("TARGET_TYPE_SOURCE")))
    .withColumn("DPAG_BARCODE_SOURCE",lit(""))
    // .withColumn("DPAG_BARCODE_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='DPAG_KENNUNG_QUELLE']/@value')"))
    // .withColumn("DPAG_BARCODE_SOURCE",concat_ws(",",col("DPAG_BARCODE_SOURCE")))
    .withColumn("DANGEROUS_GOODS_SOURCE",lit(""))
    // .withColumn("DANGEROUS_GOODS_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='GEFAHRGUT_QUELLE']/@value')"))
    // .withColumn("DANGEROUS_GOODS_SOURCE",concat_ws(",",col("DANGEROUS_GOODS_SOURCE")))
    .withColumn("IDENTIFIER_SOURCE_1",lit(""))
    // .withColumn("IDENTIFIER_SOURCE_1", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IDENTIFIER_QUELLE_1']/@value')"))
    // .withColumn("IDENTIFIER_SOURCE_1",concat_ws(",",col("IDENTIFIER_SOURCE_1")))
    .withColumn("IDENTIFIER_SOURCE_2",lit(""))
    // .withColumn("IDENTIFIER_SOURCE_2", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IDENTIFIER_QUELLE_2']/@value')"))
    // .withColumn("IDENTIFIER_SOURCE_2",concat_ws(",",col("IDENTIFIER_SOURCE_2")))
    .withColumn("IDENTIFIER_SOURCE_3",lit(""))
    // .withColumn("IDENTIFIER_SOURCE_3", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IDENTIFIER_QUELLE_3']/@value')"))
    // .withColumn("IDENTIFIER_SOURCE_3",concat_ws(",",col("IDENTIFIER_SOURCE_3")))
    .withColumn("IDENTIFIER_SOURCE_4",lit(""))
    // .withColumn("IDENTIFIER_SOURCE_4", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IDENTIFIER_QUELLE_4']/@value')"))
    // .withColumn("IDENTIFIER_SOURCE_4",concat_ws(",",col("IDENTIFIER_SOURCE_4")))
    .withColumn("IDENTIFIER_SOURCE_5",lit(""))
    // .withColumn("IDENTIFIER_SOURCE_5", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IDENTIFIER_QUELLE_5']/@value')"))
    // .withColumn("IDENTIFIER_SOURCE_5",concat_ws(",",col("IDENTIFIER_SOURCE_5")))
    .withColumn("ROUTING_INFORMATION_ZIP_SOURCE",lit(""))
    // .withColumn("ROUTING_INFORMATION_ZIP_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='LEIT_PLZ_QUELLE']/@value')"))
    // .withColumn("ROUTING_INFORMATION_ZIP_SOURCE",concat_ws(",",col("ROUTING_INFORMATION_ZIP_SOURCE")))
    .withColumn("ROUTING_INFORMATION_STREET_CODE_SOURCE",lit(""))
    // .withColumn("ROUTING_INFORMATION_STREET_CODE_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='LEIT_STR_QUELLE']/@value')"))
    // .withColumn("ROUTING_INFORMATION_STREET_CODE_SOURCE",concat_ws(",",col("ROUTING_INFORMATION_STREET_CODE_SOURCE")))
    .withColumn("ROUTING_INFORMATION_HOUSE_NUMBER_SOURCE",lit(""))
    // .withColumn("ROUTING_INFORMATION_HOUSE_NUMBER_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='LEIT_HNR_QUELLE']/@value')"))
    // .withColumn("ROUTING_INFORMATION_HOUSE_NUMBER_SOURCE",concat_ws(",",col("ROUTING_INFORMATION_HOUSE_NUMBER_SOURCE")))
    .withColumn("ROUTING_INFORMATION_PRODUCT_CODE_SOURCE",lit(""))
    // .withColumn("ROUTING_INFORMATION_PRODUCT_CODE_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='LEIT_PRODUKT_CODE_QUELLE']/@value')"))
    // .withColumn("ROUTING_INFORMATION_PRODUCT_CODE_SOURCE",concat_ws(",",col("ROUTING_INFORMATION_PRODUCT_CODE_SOURCE")))
    .withColumn("ACTUAL_WEIGHT_SOURCE",lit(""))
    // .withColumn("ACTUAL_WEIGHT_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IST_GEWICHT_QUELLE']/@value')"))
    // .withColumn("ACTUAL_WEIGHT_SOURCE",concat_ws(",",col("ACTUAL_WEIGHT_SOURCE")))
    .withColumn("ACTUAL_LENGTH_SOURCE",lit(""))
    // .withColumn("ACTUAL_LENGTH_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IST_LAENGE_QUELLE']/@value')"))
    // .withColumn("ACTUAL_LENGTH_SOURCE",concat_ws(",",col("ACTUAL_LENGTH_SOURCE")))
    .withColumn("ACTUAL_WIDTH_SOURCE",lit(""))
    // .withColumn("ACTUAL_WIDTH_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IST_BREITE_QUELLE']/@value')"))
    // .withColumn("ACTUAL_WIDTH_SOURCE",concat_ws(",",col("ACTUAL_WIDTH_SOURCE")))
    .withColumn("ACTUAL_HEIGHT_SOURCE",lit(""))
    // .withColumn("ACTUAL_HEIGHT_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IST_HOEHE_QUELLE']/@value')"))
    // .withColumn("ACTUAL_HEIGHT_SOURCE",concat_ws(",",col("ACTUAL_HEIGHT_SOURCE")))
    .withColumn("ACTUAL_VOLUME_SOURCE",lit(""))
    // .withColumn("ACTUAL_VOLUME_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='IST_VOLUMEN_QUELLE']/@value')"))
    // .withColumn("ACTUAL_VOLUME_SOURCE",concat_ws(",",col("ACTUAL_VOLUME_SOURCE")))
    .withColumn("POST_NUMBER_SOURCE",lit(""))
    // .withColumn("POST_NUMBER_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='POST_NUMMER_QUELLE']/@value')"))
    // .withColumn("POST_NUMBER_SOURCE",concat_ws(",",col("POST_NUMBER_SOURCE")))
    .withColumn("COUNTRY_CODE_SOURCE",lit(""))
    // .withColumn("COUNTRY_CODE_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='QUELLE_LAENDERCODE']/@value')"))
    // .withColumn("COUNTRY_CODE_SOURCE",concat_ws(",",col("COUNTRY_CODE_SOURCE")))
    .withColumn("PRODUCT_KEY_SOURCE",lit(""))
    // .withColumn("PRODUCT_KEY_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='PRODUKT_SCHL_QUELLE']/@value')"))
    // .withColumn("PRODUCT_KEY_SOURCE",concat_ws(",",col("PRODUCT_KEY_SOURCE")))
    .withColumn("WEIGHT_ALIBI_ID",lit(""))
    // .withColumn("WEIGHT_ALIBI_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='WEIGHT_ALIBI_ID']/@value')"))
    // .withColumn("WEIGHT_ALIBI_ID",concat_ws(",",col("WEIGHT_ALIBI_ID")))
    .withColumn("WEIGHT_LEGAL_CODE",lit(""))
    // .withColumn("WEIGHT_LEGAL_CODE	", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='WEIGHT_LEGAL_CODE']/@value')"))
    // .withColumn("WEIGHT_LEGAL_CODE	",concat_ws(",",col("WEIGHT_LEGAL_CODE	")))
    .withColumn("WEIGHT_ERROR_CODE",lit(""))
    // .withColumn("WEIGHT_ERROR_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='WEIGHT_ERROR_CODE']/@value')"))
    // .withColumn("WEIGHT_ERROR_CODE",concat_ws(",",col("WEIGHT_ERROR_CODE")))
    .withColumn("VOLUME_ALIBI_ID",lit(""))
    // .withColumn("VOLUME_ALIBI_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='VOLUME_ALIBI_ID']/@value')"))
    // .withColumn("VOLUME_ALIBI_ID",concat_ws(",",col("VOLUME_ALIBI_ID")))
    .withColumn("VOLUME_LEGAL_CODE",lit(""))
    // .withColumn("VOLUME_LEGAL_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='VOLUME_LEGAL_CODE']/@value')"))
    // .withColumn("VOLUME_LEGAL_CODE",concat_ws(",",col("VOLUME_LEGAL_CODE")))
    .withColumn("VOLUME_ERROR_CODE",lit(""))
    // .withColumn("VOLUME_ERROR_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='VOLUME_ERROR_CODE']/@value')"))
    // .withColumn("VOLUME_ERROR_CODE",concat_ws(",",col("VOLUME_ERROR_CODE")))
    .withColumn("EKP_SOURCE",lit(""))
    // .withColumn("EKP_SOURCE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='EKP_QUELLE']/@value')"))
    // .withColumn("EKP_SOURCE",concat_ws(",",col("EKP_SOURCE")))
    .withColumn("SOLLWEG_REASONCODE",lit(""))
    // .withColumn("SOLLWEG_REASONCODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='SOLLWEG_REASONCODE']/@value')"))
    // .withColumn("SOLLWEG_REASONCODE",concat_ws(",",col("SOLLWEG_REASONCODE")))
    .withColumn("VOLUME_DEVICE_ID",lit(""))
    // .withColumn("VOLUME_DEVICE_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='VOLUME_DEVICE_ID']/@value')"))
    // .withColumn("VOLUME_DEVICE_ID",concat_ws(",",col("VOLUME_DEVICE_ID")))
    .withColumn("WEIGHT_DEVICE_ID",lit(""))
    // .withColumn("WEIGHT_DEVICE_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='WEIGHT_DEVICE_ID']/@value')"))
    // .withColumn("WEIGHT_DEVICE_ID",concat_ws(",",col("WEIGHT_DEVICE_ID")))
    .withColumn("DATA_SOURCE_SW_TYPE",lit(""))
    // .withColumn("DATA_SOURCE_SW_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='event/messageHeader/dataSource/software/type')"))
    // .withColumn("DATA_SOURCE_SW_TYPE",concat_ws(",",col("DATA_SOURCE_SW_TYPE")))
    .withColumn("DATA_SOURCE_SW_NAME",lit(""))
    // .withColumn("DATA_SOURCE_SW_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='event/messageHeader/dataSource/software/name')"))
    // .withColumn("DATA_SOURCE_SW_NAME",concat_ws(",",col("DATA_SOURCE_SW_NAME")))
    .withColumn("DATA_SOURCE_SW_VERSION",lit(""))
    // .withColumn("DATA_SOURCE_SW_VERSION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='event/messageHeader/dataSource/software/version')"))
    // .withColumn("DATA_SOURCE_SW_VERSION",concat_ws(",",col("DATA_SOURCE_SW_VERSION")))
    .withColumn("MESSAGE_FORMAT_TYPE",lit(""))
    // .withColumn("MESSAGE_FORMAT_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/detailSourceInformation[@type='event/messageHeader/messageFormat/type')"))
    // .withColumn("MESSAGE_FORMAT_TYPE",concat_ws(",",col("MESSAGE_FORMAT_TYPE")))
    .withColumn("MESSAGE_FORMAT_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/messageFormat/name/text()')"))
    .withColumn("MESSAGE_FORMAT_NAME",concat_ws(",",col("MESSAGE_FORMAT_NAME")))
    .withColumn("MESSAGE_FORMAT_VERSION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/messageFormat/version/text()')"))
    .withColumn("MESSAGE_FORMAT_VERSION",concat_ws(",",col("MESSAGE_FORMAT_VERSION")))
    .withColumn("DANGEROUS_GOODS_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/dangerousGoodsCode/text()')"))
    .withColumn("DANGEROUS_GOODS_CODE",concat_ws(",",col("DANGEROUS_GOODS_CODE")))
    .withColumn("DISTRIBUTION_PRODUCT_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/productInformation/distributionProductCode/text()')"))
    .withColumn("DISTRIBUTION_PRODUCT_CODE",concat_ws(",",col("DISTRIBUTION_PRODUCT_CODE")))
   // .withColumn("PRODUCT_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/productInformation/productCode/text()')"))
   // .withColumn("PRODUCT_CODE",concat_ws(",",col("PRODUCT_CODE")))
    .withColumn("PRODUCT_CODE",lit(1))
    .withColumn("HANDLING_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/productInformation/handlingCode/text()')"))
    .withColumn("HANDLING_CODE",concat_ws(",",col("HANDLING_CODE")))
    .withColumn("ACTUAL_WEIGHT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/weight/@value')"))
    .withColumn("ACTUAL_WEIGHT",concat_ws(",",col("ACTUAL_WEIGHT")))
    .withColumn("ACTUAL_WEIGHT_UNIT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/weight/@unit')"))
    .withColumn("ACTUAL_WEIGHT_UNIT",concat_ws(",",col("ACTUAL_WEIGHT_UNIT")))
    .withColumn("ACTUAL_WIDTH", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/width/@value')"))
    .withColumn("ACTUAL_WIDTH",concat_ws(",",col("ACTUAL_WIDTH")))
    .withColumn("ACTUAL_WIDTH_UNIT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/width/@unit')"))
    .withColumn("ACTUAL_WIDTH_UNIT",concat_ws(",",col("ACTUAL_WIDTH_UNIT")))
    .withColumn("ACTUAL_HEIGHT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/height/@value')"))
    .withColumn("ACTUAL_HEIGHT",concat_ws(",",col("ACTUAL_HEIGHT")))
    .withColumn("ACTUAL_HEIGHT_UNIT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/height/@unit')"))
    .withColumn("ACTUAL_HEIGHT_UNIT",concat_ws(",",col("ACTUAL_HEIGHT_UNIT")))
    .withColumn("ACTUAL_LENGTH", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/length/@value')"))
    .withColumn("ACTUAL_LENGTH",concat_ws(",",col("ACTUAL_LENGTH")))
    .withColumn("ACTUAL_LENGTH_UNIT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/length/@unit')"))
    .withColumn("ACTUAL_LENGTH_UNIT",concat_ws(",",col("ACTUAL_LENGTH_UNIT")))
    .withColumn("ACTUAL_VOLUME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/volume/@value')"))
    .withColumn("ACTUAL_VOLUME",concat_ws(",",col("ACTUAL_VOLUME")))
    .withColumn("ACTUAL_VOLUME_UNIT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/measure/volume/@unit')"))
    .withColumn("ACTUAL_VOLUME_UNIT",concat_ws(",",col("ACTUAL_VOLUME_UNIT")))
    .withColumn("TRANSPORTATION_RECEIPT_ADDITIONAL_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/text()')"))
    .withColumn("TRANSPORTATION_RECEIPT_ADDITIONAL_INFORMATION",concat_ws(",",col("TRANSPORTATION_RECEIPT_ADDITIONAL_INFORMATION")))
    .withColumn("ALTERNATIVE_TARGET_HUB_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/alternativeTarget/targetHubNumber/text()')"))
    .withColumn("ALTERNATIVE_TARGET_HUB_NUMBER",concat_ws(",",col("ALTERNATIVE_TARGET_HUB_NUMBER")))
    .withColumn("ALTERNATIVE_TARGET_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/alternativeTarget/targetName/text()')"))
    .withColumn("ALTERNATIVE_TARGET_NAME",concat_ws(",",col("ALTERNATIVE_TARGET_NAME")))
    .withColumn("ALTERNATIVE_TARGET_ROUTING_REGION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/text()')"))
    .withColumn("ALTERNATIVE_TARGET_ROUTING_REGION",concat_ws(",",col("ALTERNATIVE_TARGET_ROUTING_REGION")))
    .withColumn("ALTERNATIVE_TARGET_LOCATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/alternativeTarget/targetLocation/text()')"))
    .withColumn("ALTERNATIVE_TARGET_LOCATION",concat_ws(",",col("ALTERNATIVE_TARGET_LOCATION")))
    .withColumn("ALTERNATIVE_TARGET_CODE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/alternativeTarget/targetCodeNumber/text()')"))
    .withColumn("ALTERNATIVE_TARGET_CODE_NUMBER",concat_ws(",",col("ALTERNATIVE_TARGET_CODE_NUMBER")))
    .withColumn("ALTERNATIVE_TARGET_PROCESS_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/alternativeTarget/targetCodeNumber/text()')"))
    .withColumn("ALTERNATIVE_TARGET_PROCESS_CODE",concat_ws(",",col("ALTERNATIVE_TARGET_PROCESS_CODE")))
    .withColumn("NEXT_TARGET_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/destinationId/text()')"))
    .withColumn("NEXT_TARGET_NAME",concat_ws(",",col("NEXT_TARGET_NAME")))
    .withColumn("NEXT_TARGET_ROUTING_REGION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/productionLocationCode/routingRegion/text()')"))
    .withColumn("NEXT_TARGET_ROUTING_REGION",concat_ws(",",col("NEXT_TARGET_ROUTING_REGION")))
    .withColumn("NEXT_TARGET_LOCATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/productionLocationCode/location/text()')"))
    .withColumn("NEXT_TARGET_LOCATION",concat_ws(",",col("NEXT_TARGET_LOCATION")))
    .withColumn("NEXT_TARGET_CODE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/productionLocationCode/codeNumber/text()')"))
    .withColumn("NEXT_TARGET_CODE_NUMBER",concat_ws(",",col("NEXT_TARGET_CODE_NUMBER")))
    .withColumn("NEXT_TARGET_PROCESS_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/productionLocationCode/processCode/text()')"))
    .withColumn("NEXT_TARGET_PROCESS_CODE",concat_ws(",",col("NEXT_TARGET_PROCESS_CODE")))
    .withColumn("NEXT_TARGET_HUB_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/deliverySection/hubNumber/text()')"))
    .withColumn("NEXT_TARGET_HUB_NUMBER",concat_ws(",",col("NEXT_TARGET_HUB_NUMBER")))
    .withColumn("NEXT_TARGET_DELIVERY_BASE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/deliverySection/deliveryBaseNumber/text()')"))
    .withColumn("NEXT_TARGET_DELIVERY_BASE_NUMBER",concat_ws(",",col("NEXT_TARGET_DELIVERY_BASE_NUMBER")))
    .withColumn("NEXT_TARGET_DELIVERY_DISTRICT_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/deliverySection/deliveryDistrictNumber/text()')"))
    .withColumn("NEXT_TARGET_DELIVERY_DISTRICT_NUMBER",concat_ws(",",col("NEXT_TARGET_DELIVERY_DISTRICT_NUMBER")))
    .withColumn("NEXT_TARGET_DELIVERY_SECTION_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/nextTarget/deliverySection/deliverySectionNumber/text()')"))
    .withColumn("NEXT_TARGET_DELIVERY_SECTION_NUMBER",concat_ws(",",col("NEXT_TARGET_DELIVERY_SECTION_NUMBER")))
    .withColumn("LOGICAL_TARGET", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/logicalTarget/text()')"))
    .withColumn("LOGICAL_TARGET",concat_ws(",",col("LOGICAL_TARGET")))
    .withColumn("LOGICAL_TARGET_DESCRIPTION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/logicalTargetDescription/text()')"))
    .withColumn("LOGICAL_TARGET_DESCRIPTION",concat_ws(",",col("LOGICAL_TARGET_DESCRIPTION")))
    .withColumn("SORTING_TARGET_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/sortingTargetType/text()')"))
    .withColumn("SORTING_TARGET_TYPE",concat_ws(",",col("SORTING_TARGET_TYPE")))
    .withColumn("SORTING_USED_COMPUTED_ROUTE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/sortingUsedComputedRoute/text()')"))
    .withColumn("SORTING_USED_COMPUTED_ROUTE",concat_ws(",",col("SORTING_USED_COMPUTED_ROUTE")))
    .withColumn("MAPPED_DESTINATION_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/mappedDestinationID/text()')"))
    .withColumn("MAPPED_DESTINATION_ID",concat_ws(",",col("MAPPED_DESTINATION_ID")))
    .withColumn("DROPPING_POINT_AN", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/droppingPointAN/text()')"))
    .withColumn("DROPPING_POINT_AN",concat_ws(",",col("DROPPING_POINT_AN")))
    .withColumn("INFEED_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/infeedType/text()')"))
    .withColumn("INFEED_TYPE",concat_ws(",",col("INFEED_TYPE")))
    .withColumn("INFEED_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/additionalInformation/infeedCode/text()')"))
    .withColumn("INFEED_CODE",concat_ws(",",col("INFEED_CODE")))
    .withColumn("DIRECT_TRANSPORT_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/directTransport/text()')"))
    .withColumn("DIRECT_TRANSPORT_FLAG",concat_ws(",",col("DIRECT_TRANSPORT_FLAG")))
    .withColumn("CONTAINER_IDENTIFIER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/containerIdentifier/@type')"))
    .withColumn("CONTAINER_IDENTIFIER_TYPE",concat_ws(",",col("CONTAINER_IDENTIFIER_TYPE")))
    .withColumn("CONTAINER_IDENTIFIER_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/containerIdentifier/@value')"))
    .withColumn("CONTAINER_IDENTIFIER_VALUE",concat_ws(",",col("CONTAINER_IDENTIFIER_VALUE")))
    .withColumn("HUB_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/hubType/text()')"))
    .withColumn("HUB_TYPE",concat_ws(",",col("HUB_TYPE")))
    .withColumn("DESTINATION_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/destinationId/text()')"))
    .withColumn("DESTINATION_ID",concat_ws(",",col("DESTINATION_ID")))
    .withColumn("TARGET_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/targetType/text()')"))
    .withColumn("TARGET_TYPE",concat_ws(",",col("TARGET_TYPE")))
    .withColumn("SCAN_POINT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/scanPoint/text()')"))
    .withColumn("SCAN_POINT",concat_ws(",",col("SCAN_POINT")))
    .withColumn("DROPPING_POINT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/droppingPoint/text()')"))
    .withColumn("DROPPING_POINT",concat_ws(",",col("DROPPING_POINT")))
    .withColumn("EAN_PRODUCT_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/transportationReceipt/eanProductCode/text()')"))
    .withColumn("EAN_PRODUCT_CODE",concat_ws(",",col("EAN_PRODUCT_CODE")))
    .withColumn("CREATION_LOCATION_ADDITIONAL_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/additionalInformation/text()')"))
    .withColumn("CREATION_LOCATION_ADDITIONAL_INFORMATION",concat_ws(",",col("CREATION_LOCATION_ADDITIONAL_INFORMATION")))
    // only first xpath expression
    .withColumn("PRODUCTION_LOCATION_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/additionalInformation/productionLocationName/text()')"))
    .withColumn("PRODUCTION_LOCATION_NAME",concat_ws(",",col("PRODUCTION_LOCATION_NAME")))
    .withColumn("PRODUCTION_LOCATION_LOCATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/productionLocationCode/location/text()')"))
    .withColumn("PRODUCTION_LOCATION_LOCATION",concat_ws(",",col("PRODUCTION_LOCATION_LOCATION")))
    .withColumn("PRODUCTION_LOCATION_CODE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/productionLocationCode/codeNumber/text()')"))
    .withColumn("PRODUCTION_LOCATION_CODE_NUMBER",concat_ws(",",col("PRODUCTION_LOCATION_CODE_NUMBER")))
    .withColumn("PRODUCTION_LOCATION_PROCESS_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/productionLocationCode/processCode/text()')"))
    .withColumn("PRODUCTION_LOCATION_PROCESS_CODE",concat_ws(",",col("PRODUCTION_LOCATION_PROCESS_CODE")))
    .withColumn("CREATION_LOCATION_ADDRESS_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/address/type/text()')"))
    .withColumn("CREATION_LOCATION_ADDRESS_TYPE",concat_ws(",",col("CREATION_LOCATION_ADDRESS_TYPE")))
    .withColumn("CREATION_LOCATION_ADDRESS_STREET", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/address/street/text()')"))
    .withColumn("CREATION_LOCATION_ADDRESS_STREET",concat_ws(",",col("CREATION_LOCATION_ADDRESS_STREET")))
    .withColumn("CREATION_LOCATION_ADDRESS_HOUSE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/address/houseNumber/text()')"))
    .withColumn("CREATION_LOCATION_ADDRESS_HOUSE_NUMBER",concat_ws(",",col("CREATION_LOCATION_ADDRESS_HOUSE_NUMBER")))
    .withColumn("CREATION_LOCATION_ADDRESS_ZIP", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/address/zip/text()')"))
    .withColumn("CREATION_LOCATION_ADDRESS_ZIP",concat_ws(",",col("CREATION_LOCATION_ADDRESS_ZIP")))
    .withColumn("CREATION_LOCATION_ADDRESS_CITY", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/address/city/text()')"))
    .withColumn("CREATION_LOCATION_ADDRESS_CITY",concat_ws(",",col("CREATION_LOCATION_ADDRESS_CITY")))
    .withColumn("CREATION_LOCATION_COUNTRY_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/address/countryCode/text()')"))
    .withColumn("CREATION_LOCATION_COUNTRY_CODE",concat_ws(",",col("CREATION_LOCATION_COUNTRY_CODE")))
    .withColumn("CREATION_LOCATION_PRODUCTION_FACILITY_NUMBER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/productionFacility/number/@type')"))
    .withColumn("CREATION_LOCATION_PRODUCTION_FACILITY_NUMBER_TYPE",concat_ws(",",col("CREATION_LOCATION_PRODUCTION_FACILITY_NUMBER_TYPE")))
    .withColumn("CREATION_LOCATION_PRODUCTION_FACILITY_NUMBER_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/productionFacility/number/@value')"))
    .withColumn("CREATION_LOCATION_PRODUCTION_FACILITY_NUMBER_VALUE",concat_ws(",",col("CREATION_LOCATION_PRODUCTION_FACILITY_NUMBER_VALUE")))
    .withColumn("CREATION_LOCATION_PRODUCTION_FACILITY_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/productionFacility/type/text()')"))
    .withColumn("CREATION_LOCATION_PRODUCTION_FACILITY_TYPE",concat_ws(",",col("CREATION_LOCATION_PRODUCTION_FACILITY_TYPE")))
    .withColumn("PHYSICAL_PRODUCTION_LOCATION_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/additionalInformation/physicalProductionLocationName/text()')"))
    .withColumn("PHYSICAL_PRODUCTION_LOCATION_NAME",concat_ws(",",col("PHYSICAL_PRODUCTION_LOCATION_NAME")))
    .withColumn("DELIVERY_NET", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/deliveryNet/text()')"))
    .withColumn("DELIVERY_NET",concat_ws(",",col("DELIVERY_NET")))
    .withColumn("ESTIMATED_DELAYED_DELIVERY_DATE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/estimatedDelayedDeliveryDate/text()')"))
    .withColumn("ESTIMATED_DELAYED_DELIVERY_DATE",concat_ws(",",col("ESTIMATED_DELAYED_DELIVERY_DATE")))
    .withColumn("ESTIMATED_DELIVERY_DATE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/estimatedDeliveryDate/text()')"))
    .withColumn("ESTIMATED_DELIVERY_DATE",concat_ws(",",col("ESTIMATED_DELIVERY_DATE")))
    .withColumn("ESTIMATED_DELIVERY_TIME_FROM", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/estimatedDeliveryTimeFrom/text()')"))
    .withColumn("ESTIMATED_DELIVERY_TIME_FROM",concat_ws(",",col("ESTIMATED_DELIVERY_TIME_FROM")))
    .withColumn("ESTIMATED_DELIVERY_TIME_TO", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/estimatedDeliveryTimeTo/text()')"))
    .withColumn("ESTIMATED_DELIVERY_TIME_TO",concat_ws(",",col("ESTIMATED_DELIVERY_TIME_TO")))
    .withColumn("ESTIMATED_DELIVERY_DATE_PROBABILITY", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/estimatedDeliveryDateProbability/text()')"))
    .withColumn("ESTIMATED_DELIVERY_DATE_PROBABILITY",concat_ws(",",col("ESTIMATED_DELIVERY_DATE_PROBABILITY")))
    .withColumn("IS_RELEVANT_FOR_PRODUCTION_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/isRelevantForProduction/text()')"))
    .withColumn("IS_RELEVANT_FOR_PRODUCTION_FLAG",concat_ws(",",col("IS_RELEVANT_FOR_PRODUCTION_FLAG")))
    .withColumn("LAST_MILE_DELIVERY_DATA_CHANGED_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/lastMileDeliveryDataChanged/text()')"))
    .withColumn("LAST_MILE_DELIVERY_DATA_CHANGED_FLAG",concat_ws(",",col("LAST_MILE_DELIVERY_DATA_CHANGED_FLAG")))
    .withColumn("ROUTE_RELEVANT_FOR_START_NODE_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/routeRelevantForStartNode/text()')"))
    .withColumn("ROUTE_RELEVANT_FOR_START_NODE_FLAG",concat_ws(",",col("ROUTE_RELEVANT_FOR_START_NODE_FLAG")))
    .withColumn("SHELF_NO_IN_DELIVERY_VEHICLE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/additionalInformation/shelfNumberInDeliveryVehicle/text()')"))
    .withColumn("SHELF_NO_IN_DELIVERY_VEHICLE",concat_ws(",",col("SHELF_NO_IN_DELIVERY_VEHICLE")))
    .withColumn("TARGET_NODE_ROUTING_INFORMATION_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/targetNode/routingInformation/type/text()')"))
    .withColumn("TARGET_NODE_ROUTING_INFORMATION_TYPE",concat_ws(",",col("TARGET_NODE_ROUTING_INFORMATION_TYPE")))
    // next five are all the same
    .withColumn("TARGET_NODE_ROUTING_INFORMATION_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/targetNode/routingInformation/code/text()')"))
    .withColumn("TARGET_NODE_ROUTING_INFORMATION_CODE",concat_ws(",",col("TARGET_NODE_ROUTING_INFORMATION_CODE")))
    .withColumn("TARGET_NODE_ZIP_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/targetNode/routingInformation/code/text()')"))
    .withColumn("TARGET_NODE_ZIP_CODE",concat_ws(",",col("TARGET_NODE_ZIP_CODE")))
    .withColumn("TARGET_NODE_STREET_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/targetNode/routingInformation/code/text()')"))
    .withColumn("TARGET_NODE_STREET_CODE",concat_ws(",",col("TARGET_NODE_STREET_CODE")))
    .withColumn("TARGET_NODE_HOUSE_NUMBER_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/targetNode/routingInformation/code/text()')"))
    .withColumn("TARGET_NODE_HOUSE_NUMBER_CODE",concat_ws(",",col("TARGET_NODE_HOUSE_NUMBER_CODE")))
    .withColumn("TARGET_NODE_PRODUCT_CODE_NATIONAL", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/targetNode/routingInformation/code/text()')"))
    .withColumn("TARGET_NODE_PRODUCT_CODE_NATIONAL",concat_ws(",",col("TARGET_NODE_PRODUCT_CODE_NATIONAL")))
    .withColumn("CORR_CHECK_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/checkCode/text()')"))
    .withColumn("CORR_CHECK_CODE",concat_ws(",",col("CORR_CHECK_CODE")))
    .withColumn("CORR_ERROR_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/errorCode/text()')"))
    .withColumn("CORR_ERROR_CODE",concat_ws(",",col("CORR_ERROR_CODE")))
    .withColumn("CORR_INSTRUCTION_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/correctionInstructionId/text()')"))
    .withColumn("CORR_INSTRUCTION_ID",concat_ws(",",col("CORR_INSTRUCTION_ID")))
    .withColumn("CORR_ORIG_EVENT_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/originalEvent/eventId/text()')"))
    .withColumn("CORR_ORIG_EVENT_ID",concat_ws(",",col("CORR_ORIG_EVENT_ID")))
    .withColumn("CORR_PROTOCOL_VERSION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/correctionProtocolVersion/text()')"))
    .withColumn("CORR_PROTOCOL_VERSION",concat_ws(",",col("CORR_PROTOCOL_VERSION")))
    .withColumn("CORR_SCRIPT_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/scriptId/text()')"))
    .withColumn("CORR_SCRIPT_ID",concat_ws(",",col("CORR_SCRIPT_ID")))
    .withColumn("CORR_TO_BE_ARCHIVED_ORIGINATOR", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/toBeArchivedOriginator/text()')"))
    .withColumn("CORR_TO_BE_ARCHIVED_ORIGINATOR",concat_ws(",",col("CORR_TO_BE_ARCHIVED_ORIGINATOR")))
    .withColumn("CREATION_LOC_ADDRESS_COUNTRY", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationLocation/address/countryCode/text()')"))
    .withColumn("CREATION_LOC_ADDRESS_COUNTRY",concat_ws(",",col("CREATION_LOC_ADDRESS_COUNTRY")))
    .withColumn("ENRICHMENT_STATUS",lit(""))
    // .withColumn("ENRICHMENT_STATUS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalStatusCode/[@type='ENRICHMENT_STATUS']/@value')"))
    // .withColumn("ENRICHMENT_STATUS",concat_ws(",",col("ENRICHMENT_STATUS")))
    .withColumn("ERROR_WEBMETHODS_FUNCTION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/webMethodsFunction/text()')"))
    .withColumn("ERROR_WEBMETHODS_FUNCTION",concat_ws(",",col("ERROR_WEBMETHODS_FUNCTION")))
    .withColumn("ERROR_WEBMETHODS_LEVEL", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/webMethodsLevel/text()')"))
    .withColumn("ERROR_WEBMETHODS_LEVEL",concat_ws(",",col("ERROR_WEBMETHODS_LEVEL")))
    .withColumn("ERROR_WEBMETHODS_MESSAGE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/webMethodsMessage/text()')"))
    .withColumn("ERROR_WEBMETHODS_MESSAGE",concat_ws(",",col("ERROR_WEBMETHODS_MESSAGE")))
    .withColumn("ERROR_WEBMETHODS_WARNING_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/additionalInformation/webMethodsWarningCode/text()')"))
    .withColumn("ERROR_WEBMETHODS_WARNING_CODE",concat_ws(",",col("ERROR_WEBMETHODS_WARNING_CODE")))
    .withColumn("DATA_SOURCE_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/dataSource/datasourceId/text()')"))
    .withColumn("DATA_SOURCE_ID",concat_ws(",",col("DATA_SOURCE_ID")))
    .withColumn("LINE_NO", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/dataSource/datasourceLine/text()')"))
    .withColumn("LINE_NO",concat_ws(",",col("LINE_NO")))
    .withColumn("LOAD_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/dataSource/metaLoadId/text()')"))
    .withColumn("LOAD_ID",concat_ws(",",col("LOAD_ID")))
    .withColumn("EVENT_CREATION_TS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/creationTimestamp/text()')"))
    .withColumn("EVENT_CREATION_TS",concat_ws(",",col("EVENT_CREATION_TS")))
    .withColumn("EVENT_HASHVALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/hashValue/text()')"))
    .withColumn("EVENT_HASHVALUE",concat_ws(",",col("EVENT_HASHVALUE")))
    .withColumn("FORMAT_ADJUST_COMMENT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/comment/text()')"))
    .withColumn("FORMAT_ADJUST_COMMENT",concat_ws(",",col("FORMAT_ADJUST_COMMENT")))
    .withColumn("FORMAT_ADJUST_CORRECTION_TS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/correctionTimestamp/text()')"))
    .withColumn("FORMAT_ADJUST_CORRECTION_TS",concat_ws(",",col("FORMAT_ADJUST_CORRECTION_TS")))
    .withColumn("FORMAT_ADJUST_ORIG_EVENT_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/originalEvent/eventId/text()')"))
    .withColumn("FORMAT_ADJUST_ORIG_EVENT_ID",concat_ws(",",col("FORMAT_ADJUST_ORIG_EVENT_ID")))
    .withColumn("FORMAT_ADJUST_ORIG_EVT_PRED_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/originalEvent/predecessor/eventId/text()')"))
    .withColumn("FORMAT_ADJUST_ORIG_EVT_PRED_ID",concat_ws(",",col("FORMAT_ADJUST_ORIG_EVT_PRED_ID")))
    .withColumn("FORMAT_ADJUST_POST_PROC_ADJUST", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/postProcessingAdjustment/text()')"))
    .withColumn("FORMAT_ADJUST_POST_PROC_ADJUST",concat_ws(",",col("FORMAT_ADJUST_POST_PROC_ADJUST")))
    .withColumn("FORMAT_ADJUST_REVISER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/reviser/text()')"))
    .withColumn("FORMAT_ADJUST_REVISER",concat_ws(",",col("FORMAT_ADJUST_REVISER")))
    .withColumn("FORMAT_ADJUST_SYNTHETIC_EVENT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/syntheticEvent/text()')"))
    .withColumn("FORMAT_ADJUST_SYNTHETIC_EVENT",concat_ws(",",col("FORMAT_ADJUST_SYNTHETIC_EVENT")))
    .withColumn("FORMAT_ERROR_CHECK_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatErrorInformation/checkCode/text()')"))
    .withColumn("FORMAT_ERROR_CHECK_CODE",concat_ws(",",col("FORMAT_ERROR_CHECK_CODE")))
    .withColumn("FORMAT_ERROR_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatErrorInformation/code/text()')"))
    .withColumn("FORMAT_ERROR_CODE",concat_ws(",",col("FORMAT_ERROR_CODE")))
    .withColumn("FORMAT_ERROR_TS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/formatErrorInformation/timestamp/text()')"))
    .withColumn("FORMAT_ERROR_TS",concat_ws(",",col("FORMAT_ERROR_TS")))
    .withColumn("CTE_ID", col("PK"))
    .drop("value", "PK")
    writeToSQLDB(df_temp, "PICKUP_TO_DELIVERY.CANONICAL_TRACK_EVENT")
}


def canonicalTrackEventNotificationHeader(df: DataFrame) = {
  val df_temp = df
    .withColumn("NOTIF_CREATION_TIMESTAMP", expr("xpath(value, '/packageNotification/creationTimestamp/text()')"))
    .withColumn("NOTIF_CREATION_TIMESTAMP",concat_ws(",",col("NOTIF_CREATION_TIMESTAMP")))
    .withColumn("NOTIFICATION_ID", expr("xpath(value, '/packageNotification/id/text()')"))
    .withColumn("NOTIFICATION_ID",concat_ws(",",col("NOTIFICATION_ID")))
    .withColumn("NOTIF_MANUALLY_CREATED_FLAG", expr("xpath(value, '/packageNotification/manuallyCreated/text()')"))
    .withColumn("NOTIF_MANUALLY_CREATED_FLAG",concat_ws(",",col("NOTIF_MANUALLY_CREATED_FLAG")))
    .withColumn("NOTIF_MANUALLY_CREATED_FLAG", regexp_replace($"NOTIF_MANUALLY_CREATED_FLAG", "true", "1"))
    .withColumn("NOTIF_MANUALLY_CREATED_FLAG", regexp_replace($"NOTIF_MANUALLY_CREATED_FLAG", "false", "0"))
    .withColumn("NOTIF_MANUALLY_CREATED_FLAG", $"NOTIF_MANUALLY_CREATED_FLAG".cast("int"))
    .withColumn("NOTIF_TRIGGERING_EVENT_ID", expr("xpath(value, '/packageNotification/triggeringEvent/text()')"))
    .withColumn("NOTIF_TRIGGERING_EVENT_ID",concat_ws(",",col("NOTIF_TRIGGERING_EVENT_ID")))
    .withColumn("CTE_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "NNH_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.CANONICAL_TRACK_EVENT_NOTIFICATION_HEADER")
}



def computedRouteNode(df: DataFrame) = {
  val df_temp = df
    .withColumn("EVENT_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/id/text()')"))
    .withColumn("EVENT_ID",concat_ws(",",col("EVENT_ID")))
    .withColumn("CURRENT_DISTRICT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/distributionTarget/currentDistrict/additionalInformation/productionLocationName/text()')"))
    .withColumn("CURRENT_DISTRICT",concat_ws(",",col("CURRENT_DISTRICT")))
    .withColumn("PRODUCTION_LOCATION_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/productionLocationName/text()')"))
    .withColumn("PRODUCTION_LOCATION_NAME",concat_ws(",",col("PRODUCTION_LOCATION_NAME")))
    .withColumn("PRODUCTION_LOCATION_ROUTING_REGION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/productionLocationCode/routingRegion/text()')"))
    .withColumn("PRODUCTION_LOCATION_ROUTING_REGION",concat_ws(",",col("PRODUCTION_LOCATION_ROUTING_REGION")))
    .withColumn("PRODUCTION_LOCATION_LOCATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/productionLocationCode/location/text()')"))
    .withColumn("PRODUCTION_LOCATION_LOCATION",concat_ws(",",col("PRODUCTION_LOCATION_LOCATION")))
    .withColumn("PRODUCTION_LOCATION_CODE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/productionLocationCode/codeNumber/text()')"))
    .withColumn("PRODUCTION_LOCATION_CODE_NUMBER",concat_ws(",",col("PRODUCTION_LOCATION_CODE_NUMBER")))
    .withColumn("PRODUCTION_LOCATION_PROCESS_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/productionLocationCode/processCode/text()')"))
    .withColumn("PRODUCTION_LOCATION_PROCESS_CODE",concat_ws(",",col("PRODUCTION_LOCATION_PROCESS_CODE")))
    .withColumn("PRODUCTION_FACILITY_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/productionFacility/number/@type')"))
    .withColumn("PRODUCTION_FACILITY_TYPE",concat_ws(",",col("PRODUCTION_FACILITY_TYPE")))
    .withColumn("PRODUCTION_FACILITY_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/productionFacility/number/@value')"))
    .withColumn("PRODUCTION_FACILITY_VALUE",concat_ws(",",col("PRODUCTION_FACILITY_VALUE")))
    .withColumn("TARGET_NODE_FLAG", lit(""))
    // .withColumn("TARGET_NODE_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/.../text()')"))
    // .withColumn("TARGET_NODE_FLAG",concat_ws(",",col("TARGET_NODE_FLAG")))
    .withColumn("TOUR_AGNR", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/tourName/text()')"))
    .withColumn("TOUR_AGNR",concat_ws(",",col("TOUR_AGNR")))
    .withColumn("POSITION_IN_TOUR", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/positionInTour/text()')"))
    .withColumn("POSITION_IN_TOUR",concat_ws(",",col("POSITION_IN_TOUR")))
    .withColumn("ARRIVAL_TIME_IN_TOUR", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/arrivalTimeInTour/text()')"))
    .withColumn("ARRIVAL_TIME_IN_TOUR",concat_ws(",",col("ARRIVAL_TIME_IN_TOUR")))
    .withColumn("CTE_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "CRN_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.COMPUTED_ROUTE_NODE")
}


def detailSourceInformation(df: DataFrame) = {
  val df_temp = df
    .withColumn("DETAIL_SOURCE_INFORMATION_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/dataSource/detailSourceInformation/@type')"))
    .withColumn("DETAIL_SOURCE_INFORMATION_TYPE",concat_ws(",",col("DETAIL_SOURCE_INFORMATION_TYPE")))
    .withColumn("DETAIL_SOURCE_INFORMATION_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/triggeringMessage/dataSource/detailSourceInformation/@value')"))
    .withColumn("DETAIL_SOURCE_INFORMATION_VALUE",concat_ws(",",col("DETAIL_SOURCE_INFORMATION_VALUE")))
    .withColumn("CTE_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "DSI_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.DETAIL_SOURCE_INFORMATION")
}

def identifier(df: DataFrame) = {
  val df_temp = df
    .withColumn("IDENTIFIER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/packageIdentifier/@type')"))
    .withColumn("IDENTIFIER_TYPE",concat_ws(",",col("IDENTIFIER_TYPE")))
    .withColumn("IDENTIFIER_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/packageIdentifier/@value')"))
    .withColumn("IDENTIFIER_VALUE",concat_ws(",",col("IDENTIFIER_VALUE")))
    .withColumn("IDENTIFIER_STATUS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/additionalIdentifier/@status')"))
    .withColumn("IDENTIFIER_STATUS",concat_ws(",",col("IDENTIFIER_STATUS")))
    .withColumn("MAIN_IDENTIFIER_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/packageIdentifier/text()')"))
    .withColumn("MAIN_IDENTIFIER_FLAG",concat_ws(",",col("MAIN_IDENTIFIER_FLAG")))
    .withColumn("SHIPMENT_IDENTIFIER_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/text()')"))
    .withColumn("SHIPMENT_IDENTIFIER_FLAG",concat_ws(",",col("SHIPMENT_IDENTIFIER_FLAG")))
    .withColumn("CTE_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "IDC_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.IDENTIFIER")
}


def messageHeader(df: DataFrame) = {
  val df_temp = df
    .withColumn("MSG_HDR", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/text()')"))
    .withColumn("MSG_HDR",concat_ws(",",col("MSG_HDR")))
    .withColumn("MSG_HDR_CREATION_TS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/creationTimestamp/text()')"))
    .withColumn("MSG_HDR_CREATION_TS",concat_ws(",",col("MSG_HDR_CREATION_TS")))
    .withColumn("MSG_HDR_DEVICE_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/device/identifier/text()')"))
    .withColumn("MSG_HDR_DEVICE_ID",concat_ws(",",col("MSG_HDR_DEVICE_ID")))
    .withColumn("MSG_HDR_DEVICE_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/device/name/text()')"))
    .withColumn("MSG_HDR_DEVICE_NAME",concat_ws(",",col("MSG_HDR_DEVICE_NAME")))
    .withColumn("MSG_HDR_DEVICE_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/device/type/text()')"))
    .withColumn("MSG_HDR_DEVICE_TYPE",concat_ws(",",col("MSG_HDR_DEVICE_TYPE")))
    .withColumn("MSG_HDR_DS_DSTID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/dstId/text()')"))
    .withColumn("MSG_HDR_DS_DSTID",concat_ws(",",col("MSG_HDR_DS_DSTID")))
    .withColumn("MSG_HDR_DS_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/name/text()')"))
    .withColumn("MSG_HDR_DS_NAME",concat_ws(",",col("MSG_HDR_DS_NAME")))
    .withColumn("MSG_HDR_DS_RECEIVING_TS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/receivingTimestamp/text()')"))
    .withColumn("MSG_HDR_DS_RECEIVING_TS",concat_ws(",",col("MSG_HDR_DS_RECEIVING_TS")))
    .withColumn("MSG_HDR_DS_VERSION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/version/text()')"))
    .withColumn("MSG_HDR_DS_VERSION",concat_ws(",",col("MSG_HDR_DS_VERSION")))
    .withColumn("MSG_HDR_EXPORT_FILE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/exportFile/text()')"))
    .withColumn("MSG_HDR_EXPORT_FILE",concat_ws(",",col("MSG_HDR_EXPORT_FILE")))
    .withColumn("MSG_HDR_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/identifier/@type')"))
    .withColumn("MSG_HDR_ID",concat_ws(",",col("MSG_HDR_ID")))
    .withColumn("MSG_HDR_ID_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/identifier/@value')"))
    .withColumn("MSG_HDR_ID_TYPE",concat_ws(",",col("MSG_HDR_ID_TYPE")))
    .withColumn("MSG_HDR_IS_TEST", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/messageFormat/type/text()')"))
    .withColumn("MSG_HDR_IS_TEST",concat_ws(",",col("MSG_HDR_IS_TEST")))
    .withColumn("MSG_HDR_MSG_FORMAT_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/messageFormat/type/text()')"))
    .withColumn("MSG_HDR_MSG_FORMAT_TYPE",concat_ws(",",col("MSG_HDR_MSG_FORMAT_TYPE")))
    .withColumn("MSG_HDR_MSG_FORMAT_VER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/messageFormat/version/text()')"))
    .withColumn("MSG_HDR_MSG_FORMAT_VER",concat_ws(",",col("MSG_HDR_MSG_FORMAT_VER")))
    .withColumn("MSG_HDR_PROCESSINGTS_NAME1", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/processingTimestamp/@name')"))
    .withColumn("MSG_HDR_PROCESSINGTS_NAME1",concat_ws(",",col("MSG_HDR_PROCESSINGTS_NAME1")))
    .withColumn("MSG_HDR_PROCESSINGTS_NAME2", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/processingTimestamp/@name')"))
    .withColumn("MSG_HDR_PROCESSINGTS_NAME2",concat_ws(",",col("MSG_HDR_PROCESSINGTS_NAME2")))
    .withColumn("MSG_HDR_PROCESSING_TS_1", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/processingTimestamp/@value')"))
    .withColumn("MSG_HDR_PROCESSING_TS_1",concat_ws(",",col("MSG_HDR_PROCESSING_TS_1")))
    .withColumn("MSG_HDR_PROCESSING_TS_2", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/processingTimestamp/@value')"))
    .withColumn("MSG_HDR_PROCESSING_TS_2",concat_ws(",",col("MSG_HDR_PROCESSING_TS_2")))
    .withColumn("MSG_HDR_PROCESS_DESC", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/processDescription/text()')"))
    .withColumn("MSG_HDR_PROCESS_DESC",concat_ws(",",col("MSG_HDR_PROCESS_DESC")))
    .withColumn("MSG_HDR_RECIPIENT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/recipient/text()')"))
    .withColumn("MSG_HDR_RECIPIENT",concat_ws(",",col("MSG_HDR_RECIPIENT")))
    .withColumn("MSG_HDR_SENDER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/sender/text()')"))
    .withColumn("MSG_HDR_SENDER",concat_ws(",",col("MSG_HDR_SENDER")))
    .withColumn("MSG_HDR_SW_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/software/name/text()')"))
    .withColumn("MSG_HDR_SW_NAME",concat_ws(",",col("MSG_HDR_SW_NAME")))
    .withColumn("MSG_HDR_SW_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/software/type/text()')"))
    .withColumn("MSG_HDR_SW_TYPE",concat_ws(",",col("MSG_HDR_SW_TYPE")))
    .withColumn("MSG_HDR_SW_VERSION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/messageHeader/dataSource/software/version/text()')"))
    .withColumn("MSG_HDR_SW_VERSION",concat_ws(",",col("MSG_HDR_SW_VERSION")))
    .drop("value", "PK")
   writeToSQLDB(df_temp, "PICKUP_TO_DELIVERY.MESSAGE_HEADER")
}



def notificationType(df: DataFrame) = {
  val df_temp = df
    .withColumn("NOTIF_ALREADY_SENT_FLAG", expr("xpath(value, '/packageNotification/type/alreadySent/text()')"))
    .withColumn("NOTIF_ALREADY_SENT_FLAG",concat_ws(",",col("NOTIF_ALREADY_SENT_FLAG")))
    .withColumn("NOTIF_ALREADY_SENT_FLAG", regexp_replace($"NOTIF_ALREADY_SENT_FLAG", "true", "1"))
    .withColumn("NOTIF_ALREADY_SENT_FLAG", regexp_replace($"NOTIF_ALREADY_SENT_FLAG", "false", "0"))
    .withColumn("NOTIF_ALREADY_SENT_FLAG", $"NOTIF_ALREADY_SENT_FLAG".cast("int"))
    .withColumn("NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG", expr("xpath(value, '/packageNotification/type/triggeringStateChangeSynthetic/text()')"))
    .withColumn("NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG",concat_ws(",",col("NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG")))
    .withColumn("NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG", regexp_replace($"NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG", "true", "1"))
    .withColumn("NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG", regexp_replace($"NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG", "false", "0"))
    .withColumn("NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG", $"NOTIF_TRG_STATE_CHANGE_SYNTH_FLAG".cast("int"))
    .withColumn("NOTIF_TYPE_NAME", expr("xpath(value, '/packageNotification/type/name/text()')"))
    .withColumn("NOTIF_TYPE_NAME",concat_ws(",",col("NOTIF_TYPE_NAME")))
    .withColumn("NNH_ID", col("PK"))
    .drop("value", "PK")
  
  val dfWithKey = addHashColumn(df_temp, "NNT_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.NOTIFICATION_TYPE")
}

def packageBatchCard(df: DataFrame) = {
  val df_temp = df
    .withColumn("ADD_SERVICES_ORDER_TYPE", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/additionalServicesOrderType/text()')"))
    .withColumn("ADD_SERVICES_ORDER_TYPE",concat_ws(",",col("ADD_SERVICES_ORDER_TYPE")))
    .withColumn("COUNTRIES_COUNTRY_CODE", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/countries/country/text()')"))
    .withColumn("COUNTRIES_COUNTRY_CODE",concat_ws(",",col("COUNTRIES_COUNTRY_CODE")))
    .withColumn("DELIVERY_NET", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/deliveryNet/text()')"))
    .withColumn("DELIVERY_NET",concat_ws(",",col("DELIVERY_NET")))
    .withColumn("DTM_TOUR_ID", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/tour/tourId/text()')"))
    .withColumn("DTM_TOUR_ID",concat_ws(",",col("DTM_TOUR_ID")))
    .withColumn("DTM_TOUR_POSITION_ID", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/tour/tourPositionId/text()')"))
    .withColumn("DTM_TOUR_POSITION_ID",concat_ws(",",col("DTM_TOUR_POSITION_ID")))
    .withColumn("ESTIMATED_DELAYED_DELIVERY_DT", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/planDelayedDeliveryDate/text()')"))
    .withColumn("ESTIMATED_DELAYED_DELIVERY_DT",concat_ws(",",col("ESTIMATED_DELAYED_DELIVERY_DT")))
    .withColumn("ESTIMATED_DELIVERY_DT_PROBABILITY", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/planDeliveryDateProbability/text()')"))
    .withColumn("ESTIMATED_DELIVERY_DT_PROBABILITY",concat_ws(",",col("ESTIMATED_DELIVERY_DT_PROBABILITY")))
    .withColumn("GENERAL_LIVE_TRACKING_AVAILABILITY_FLAG", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/generalLiveTrackingAvailability/text()')"))
    .withColumn("GENERAL_LIVE_TRACKING_AVAILABILITY_FLAG",concat_ws(",",col("GENERAL_LIVE_TRACKING_AVAILABILITY_FLAG")))
    .withColumn("INDUCTION_BAN_FLAG", expr("xpath(value, 'packageNotification/packageBatchCard/inductionBan/text()')"))
    .withColumn("INDUCTION_BAN_FLAG",concat_ws(",",col("INDUCTION_BAN_FLAG")))
    .withColumn("INDUCTION_BAN_FLAG", regexp_replace($"INDUCTION_BAN_FLAG", "true", "1"))
    .withColumn("INDUCTION_BAN_FLAG", regexp_replace($"INDUCTION_BAN_FLAG", "false", "0"))
    .withColumn("INDUCTION_BAN_FLAG", $"INDUCTION_BAN_FLAG".cast("int"))
    .withColumn("LAST_COMPUTED_ROUTE_RECEIPT_ID", expr("xpath(value, 'packageNotification/packageBatchCard/lastComputedRoute/id/text()')"))
    .withColumn("LAST_COMPUTED_ROUTE_RECEIPT_ID",concat_ws(",",col("LAST_COMPUTED_ROUTE_RECEIPT_ID")))
    .withColumn("PARENT_CONTAINER_INFO_CONTAINER_TYPE", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/shipment/parentContainerInformation/containerType/text()')"))
    .withColumn("PARENT_CONTAINER_INFO_CONTAINER_TYPE",concat_ws(",",col("PARENT_CONTAINER_INFO_CONTAINER_TYPE")))
    .withColumn("PARENT_CONTAINER_INFO_IDENTIFIER", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/shipment/parentContainerInformation/containerIdentifier/@value')"))
    .withColumn("PARENT_CONTAINER_INFO_IDENTIFIER",concat_ws(",",col("PARENT_CONTAINER_INFO_IDENTIFIER")))
    .withColumn("PARENT_CONTAINER_INFO_IDENTIFIER_LP_DATA_SOURCE", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/shipment/parentContainerInformation/containerIdentifier/@value')"))
    .withColumn("PARENT_CONTAINER_INFO_IDENTIFIER_LP_DATA_SOURCE",concat_ws(",",col("PARENT_CONTAINER_INFO_IDENTIFIER_LP_DATA_SOURCE")))
    .withColumn("PARENT_CONTAINER_INFO_IDENTIFIER_TYPE", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/shipment/parentContainerInformation/containerIdentifier/@value')"))
    .withColumn("PARENT_CONTAINER_INFO_IDENTIFIER_TYPE",concat_ws(",",col("PARENT_CONTAINER_INFO_IDENTIFIER_TYPE")))
    .withColumn("PARENT_CONTAINER_INFO_PSLZ_ID", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/shipment/parentContainerInformation/packageBatchCardId/text()')"))
    .withColumn("PARENT_CONTAINER_INFO_PSLZ_ID",concat_ws(",",col("PARENT_CONTAINER_INFO_PSLZ_ID")))
    .withColumn("PARENT_CONTAINER_INFO_SOURCE_EVENT_ID", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/shipment/parentContainerInformation/sourceEventUuid/text()')"))
    .withColumn("PARENT_CONTAINER_INFO_SOURCE_EVENT_ID",concat_ws(",",col("PARENT_CONTAINER_INFO_SOURCE_EVENT_ID")))
    .withColumn("PARENT_CONTAINER_INFO_TS", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/shipment/parentContainerInformation/timestamp/text()')"))
    .withColumn("PARENT_CONTAINER_INFO_TS",concat_ws(",",col("PARENT_CONTAINER_INFO_TS")))
    .withColumn("PLAN_DELIVERY_FROM_TS", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/planDeliveryTimeFrom/time/text()')"))
    .withColumn("PLAN_DELIVERY_FROM_TS",concat_ws(",",col("PLAN_DELIVERY_FROM_TS")))
    .withColumn("PLAN_DELIVERY_TO_TS", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/planDeliveryTimeTo/time/text()')"))
    .withColumn("PLAN_DELIVERY_TO_TS",concat_ws(",",col("PLAN_DELIVERY_TO_TS")))
    .withColumn("POSITION_IN_SHIPMENT", expr("xpath(value, 'packageNotification/packageBatchCard/positionInShipment/text()')"))
    .withColumn("POSITION_IN_SHIPMENT",concat_ws(",",col("POSITION_IN_SHIPMENT")))
    .withColumn("PSLZ_CLOSED_FLAG", expr("xpath(value, 'packageNotification/packageBatchCard/closed/text()')"))
    .withColumn("PSLZ_CLOSED_FLAG",concat_ws(",",col("PSLZ_CLOSED_FLAG")))
    .withColumn("PSLZ_CLOSED_FLAG", regexp_replace($"PSLZ_CLOSED_FLAG", "true", "1"))
    .withColumn("PSLZ_CLOSED_FLAG", regexp_replace($"PSLZ_CLOSED_FLAG", "false", "0"))
    .withColumn("PSLZ_CLOSED_FLAG", $"PSLZ_CLOSED_FLAG".cast("int"))
    .withColumn("PSLZ_CREATION_TS", expr("xpath(value, 'packageNotification/packageBatchCard/creationTimestamp/text()')"))
    .withColumn("PSLZ_CREATION_TS",concat_ws(",",col("PSLZ_CREATION_TS")))
    .withColumn("PSLZ_DISCHARGE_FLAG", expr("xpath(value, 'packageNotification/packageBatchCard/discharge/text()')"))
    .withColumn("PSLZ_DISCHARGE_FLAG",concat_ws(",",col("PSLZ_DISCHARGE_FLAG")))
    .withColumn("PSLZ_DISCHARGE_FLAG", regexp_replace($"PSLZ_CLOSED_FLAG", "true", "1"))
    .withColumn("PSLZ_DISCHARGE_FLAG", regexp_replace($"PSLZ_CLOSED_FLAG", "false", "0"))
    .withColumn("PSLZ_DISCHARGE_FLAG", $"PSLZ_DISCHARGE_FLAG".cast("int"))
    .withColumn("PSLZ_FORCED_CLOSURE_FLAG", expr("xpath(value, 'packageNotification/packageBatchCard/forcedClosure/text()')"))
    .withColumn("PSLZ_FORCED_CLOSURE_FLAG",concat_ws(",",col("PSLZ_FORCED_CLOSURE_FLAG")))
    .withColumn("PSLZ_FORCED_CLOSURE_FLAG", regexp_replace($"PSLZ_CLOSED_FLAG", "true", "1"))
    .withColumn("PSLZ_FORCED_CLOSURE_FLAG", regexp_replace($"PSLZ_CLOSED_FLAG", "false", "0"))
    .withColumn("PSLZ_FORCED_CLOSURE_FLAG", $"PSLZ_FORCED_CLOSURE_FLAG".cast("int"))
    .withColumn("PSLZ_ID", expr("xpath(value, 'packageNotification/packageBatchCard/id/text()')"))
    .withColumn("PSLZ_ID",concat_ws(",",col("PSLZ_ID")))
    .withColumn("PSLZ_LAST_UPDATE_TS", expr("xpath(value, 'packageNotification/packageBatchCard/lastUpdateTimestamp/text()')"))
    .withColumn("PSLZ_LAST_UPDATE_TS",concat_ws(",",col("PSLZ_LAST_UPDATE_TS")))
    .withColumn("PSLZ_QUALITY_IND", expr("xpath(value, 'packageNotification/packageBatchCard/qualityOfPackageBatchCardCreation/text()')"))
    .withColumn("PSLZ_QUALITY_IND",concat_ws(",",col("PSLZ_QUALITY_IND")))
    .withColumn("PSLZ_VERSION_NUMBER", expr("xpath(value, 'packageNotification/packageBatchCard/versionNumber/text()')"))
    .withColumn("PSLZ_VERSION_NUMBER",concat_ws(",",col("PSLZ_VERSION_NUMBER")))
    .withColumn("SOURCE_COUNTRY_CODE", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/sourceCountryCode/text()')"))
    .withColumn("SOURCE_COUNTRY_CODE",concat_ws(",",col("SOURCE_COUNTRY_CODE")))
    .withColumn("SPECIFIED_HEIGHT", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/height/@value')"))
    .withColumn("SPECIFIED_HEIGHT",concat_ws(",",col("SPECIFIED_HEIGHT")))
    .withColumn("SPECIFIED_HEIGHT_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/height/@unit')"))
    .withColumn("SPECIFIED_HEIGHT_UNIT",concat_ws(",",col("SPECIFIED_HEIGHT_UNIT")))
    .withColumn("SPECIFIED_LENGTH", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/length/@value')"))
    .withColumn("SPECIFIED_LENGTH",concat_ws(",",col("SPECIFIED_LENGTH")))
    .withColumn("SPECIFIED_LENGTH_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/length/@unit')"))
    .withColumn("SPECIFIED_LENGTH_UNIT",concat_ws(",",col("SPECIFIED_LENGTH_UNIT")))
    .withColumn("SPECIFIED_VOLUME", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/volume/@value')"))
    .withColumn("SPECIFIED_VOLUME",concat_ws(",",col("SPECIFIED_VOLUME")))
    .withColumn("SPECIFIED_VOLUME_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/volume/@unit')"))
    .withColumn("SPECIFIED_VOLUME_UNIT",concat_ws(",",col("SPECIFIED_VOLUME_UNIT")))
    .withColumn("SPECIFIED_WEIGHT", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/weight/@value')"))
    .withColumn("SPECIFIED_WEIGHT",concat_ws(",",col("SPECIFIED_WEIGHT")))
    .withColumn("SPECIFIED_WEIGHT_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/weight/@unit')"))
    .withColumn("SPECIFIED_WEIGHT_UNIT",concat_ws(",",col("SPECIFIED_WEIGHT_UNIT")))
    .withColumn("SPECIFIED_WIDTH", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/width/@value')"))
    .withColumn("SPECIFIED_WIDTH",concat_ws(",",col("SPECIFIED_WIDTH")))
    .withColumn("SPECIFIED_WIDTH_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/specifiedMeasures/width/@unit')"))
    .withColumn("SPECIFIED_WIDTH_UNIT",concat_ws(",",col("SPECIFIED_WIDTH_UNIT")))
    .withColumn("STATE_M_LOGISTIC_LASTCHANGE_TS",lit(""))
    //.withColumn("STATE_M_LOGISTIC_LASTCHANGE_TS", expr("xpath(value, 'packageNotification/packageBatchCard/stateMachine/[type='TYPE_LOGISTIC']/lastStateChangeTimestamp/text()')"))
    //.withColumn("STATE_M_LOGISTIC_LASTCHANGE_TS",concat_ws(",",col("STATE_M_LOGISTIC_LASTCHANGE_TS")))
    .withColumn("STATE_M_LOGISTIC_STATE",lit(""))
    //.withColumn("STATE_M_LOGISTIC_STATE", expr("xpath(value, 'packageNotification/packageBatchCard/stateMachine/[type='TYPE_LOGISTIC']/state/text()')"))
    //.withColumn("STATE_M_LOGISTIC_STATE",concat_ws(",",col("STATE_M_LOGISTIC_STATE")))
    .withColumn("STATE_M_PAN_DATA_LASTCHANGE_TS",lit(""))
    //.withColumn("STATE_M_PAN_DATA_LASTCHANGE_TS", expr("xpath(value, 'packageNotification/packageBatchCard/stateMachine/[type='TYPE_PAN_DATA']/lastStateChangeTimestamp/text()')"))
    //.withColumn("STATE_M_PAN_DATA_LASTCHANGE_TS",concat_ws(",",col("STATE_M_PAN_DATA_LASTCHANGE_TS")))
    .withColumn("STATE_M_PAN_DATA_STATE",lit(""))
    //.withColumn("STATE_M_PAN_DATA_STATE", expr("xpath(value, 'packageNotification/packageBatchCard/stateMachine/[type='TYPE_PAN_DATA']/state/text()')"))
    //.withColumn("STATE_M_PAN_DATA_STATE",concat_ws(",",col("STATE_M_PAN_DATA_STATE")))
    .withColumn("STATE_M_TGT_PATH_LASTCHANGE_TS",lit(""))
    //.withColumn("STATE_M_TGT_PATH_LASTCHANGE_TS", expr("xpath(value, 'packageNotification/packageBatchCard/stateMachine/[type='TYPE_TARGET_PATH']/lastStateChangeTimestamp/text()')"))
    //.withColumn("STATE_M_TGT_PATH_LASTCHANGE_TS",concat_ws(",",col("STATE_M_TGT_PATH_LASTCHANGE_TS")))
    .withColumn("STATE_M_TGT_PATH_STATE",lit(""))
    //.withColumn("STATE_M_TGT_PATH_STATE", expr("xpath(value, 'packageNotification/packageBatchCard/stateMachine/[type='TYPE_TARGET_PATH']/state/text()')"))
    //.withColumn("STATE_M_TGT_PATH_STATE",concat_ws(",",col("STATE_M_TGT_PATH_STATE")))
    .withColumn("TOUR_VALID_DATE", expr("xpath(value, 'packageNotification/packageBatchCard/additionalInformation/planDeliveryDate/date/text()')"))
    .withColumn("TOUR_VALID_DATE",concat_ws(",",col("TOUR_VALID_DATE")))
    .withColumn("EKP", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/ekp/text()')"))
    .withColumn("EKP",concat_ws(",",col("EKP")))
    .withColumn("METHOD_CODE", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/billingNumber/procedure/text()')"))
    .withColumn("METHOD_CODE",concat_ws(",",col("METHOD_CODE")))
    .withColumn("OBLIGATION_TO_TRACK",lit(""))
    // .withColumn("OBLIGATION_TO_TRACK", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/productInformation/additionalCode/[@type='OBLIGATION_TO_TRACK']/@value')"))
    // .withColumn("OBLIGATION_TO_TRACK",concat_ws(",",col("OBLIGATION_TO_TRACK")))
    .withColumn("ORDER_NUMBER", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/orderNumber/text()')"))
    .withColumn("ORDER_NUMBER",concat_ws(",",col("ORDER_NUMBER")))
    .withColumn("ORDER_POSITION", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/orderPosition/text()')"))
    .withColumn("ORDER_POSITION",concat_ws(",",col("ORDER_POSITION")))
    .withColumn("PARTICIPATION", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/billingNumber/participation/text()')"))
    .withColumn("PARTICIPATION",concat_ws(",",col("PARTICIPATION")))
    .withColumn("PRODUCT_CODE", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/productInformation/productCode/text()')"))
    .withColumn("PRODUCT_CODE",concat_ws(",",col("PRODUCT_CODE")))
    .withColumn("PRODUCT_KEY", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/productInformation/productKey/text()')"))
    .withColumn("PRODUCT_KEY",concat_ws(",",col("PRODUCT_KEY")))
    .withColumn("PRODUCT_TYPE", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/productInformation/productType/text()')"))
    .withColumn("PRODUCT_TYPE",concat_ws(",",col("PRODUCT_TYPE")))
    .withColumn("SHIP_FUNCT_STATE", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/functionalState/text()')"))
    .withColumn("SHIP_FUNCT_STATE",concat_ws(",",col("SHIP_FUNCT_STATE")))
    .withColumn("SHIP_ID", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/id/text()')"))
    .withColumn("SHIP_ID",concat_ws(",",col("SHIP_ID")))
    .withColumn("TOTAL_PACKAGE_NUMBER", expr("xpath(value, 'packageNotification/packageBatchCard/shipmentMainAttributes/totalPackageNumber/text()')"))
    .withColumn("TOTAL_PACKAGE_NUMBER",concat_ws(",",col("TOTAL_PACKAGE_NUMBER")))
    .withColumn("SUCCESSOR_TIMESTAMP", expr("xpath(value, 'packageNotification/packageBatchCard/successor/timestamp/text()')"))
    .withColumn("SUCCESSOR_TIMESTAMP",concat_ws(",",col("SUCCESSOR_TIMESTAMP")))
    .withColumn("SUCCESSOR_PSLZ_ID", expr("xpath(value, 'packageNotification/packageBatchCard/successor/packageBatchCardId/text()')"))
    .withColumn("SUCCESSOR_PSLZ_ID",concat_ws(",",col("SUCCESSOR_PSLZ_ID")))
    .withColumn("SUCCESSOR_REASON", expr("xpath(value, 'packageNotification/packageBatchCard/successor/reason/text()')"))
    .withColumn("SUCCESSOR_REASON",concat_ws(",",col("SUCCESSOR_REASON")))
    .withColumn("PREDECESSOR_TIMESTAMP", expr("xpath(value, 'packageNotification/packageBatchCard/predecessor/timestamp/text()')"))
    .withColumn("PREDECESSOR_TIMESTAMP",concat_ws(",",col("PREDECESSOR_TIMESTAMP")))
    .withColumn("PREDECESSOR_PSLZ_ID", expr("xpath(value, 'packageNotification/packageBatchCard/predecessor/packageBatchCardId/text()')"))
    .withColumn("PREDECESSOR_PSLZ_ID",concat_ws(",",col("PREDECESSOR_PSLZ_ID")))
    .withColumn("PREDECESSOR_REASON", expr("xpath(value, 'packageNotification/packageBatchCard/predecessor/reason/text()')"))
    .withColumn("PREDECESSOR_REASON",concat_ws(",",col("PREDECESSOR_REASON")))
    .withColumn("ACTUAL_WEIGHT", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/weight/@value')"))
    .withColumn("ACTUAL_WEIGHT",concat_ws(",",col("ACTUAL_WEIGHT")))
    .withColumn("ACTUAL_WEIGHT_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/weight/@unit')"))
    .withColumn("ACTUAL_WEIGHT_UNIT",concat_ws(",",col("ACTUAL_WEIGHT_UNIT")))
    .withColumn("ACTUAL_WIDTH", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/width/@value')"))
    .withColumn("ACTUAL_WIDTH",concat_ws(",",col("ACTUAL_WIDTH")))
    .withColumn("ACTUAL_WIDTH_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/width/@unit')"))
    .withColumn("ACTUAL_WIDTH_UNIT",concat_ws(",",col("ACTUAL_WIDTH_UNIT")))
    .withColumn("ACTUAL_HEIGHT", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/height/@value')"))
    .withColumn("ACTUAL_HEIGHT",concat_ws(",",col("ACTUAL_HEIGHT")))
    .withColumn("ACTUAL_HEIGHT_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/height/@unit')"))
    .withColumn("ACTUAL_HEIGHT_UNIT",concat_ws(",",col("ACTUAL_HEIGHT_UNIT")))
    .withColumn("ACTUAL_LENGTH", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/length/@value')"))
    .withColumn("ACTUAL_LENGTH",concat_ws(",",col("ACTUAL_LENGTH")))
    .withColumn("ACTUAL_LENGTH_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/length/@unit')"))
    .withColumn("ACTUAL_LENGTH_UNIT",concat_ws(",",col("ACTUAL_LENGTH_UNIT")))
    .withColumn("ACTUAL_VOLUME", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/volume/@value')"))
    .withColumn("ACTUAL_VOLUME",concat_ws(",",col("ACTUAL_VOLUME")))
    .withColumn("ACTUAL_VOLUME_UNIT", expr("xpath(value, 'packageNotification/packageBatchCard/actualMeasures/volume/@unit')"))
    .withColumn("ACTUAL_VOLUME_UNIT",concat_ws(",",col("ACTUAL_VOLUME_UNIT")))
    .withColumn("ADDITIONAL_SERIVCES_ORDER_TYPE", expr("xpath(value, 'packageNotification/packageBatchCard/events/event/formatAdjustmentInformation/checkCode/text()')"))
    .withColumn("ADDITIONAL_SERIVCES_ORDER_TYPE",concat_ws(",",col("ADDITIONAL_SERIVCES_ORDER_TYPE")))
    .withColumn("ADDITIONAL_INFORMATION", expr("xpath(value, 'packageBatchCard/additionalInformation/text()')"))
    .withColumn("ADDITIONAL_INFORMATION",concat_ws(",",col("ADDITIONAL_INFORMATION")))
    .withColumn("NNH_ID", col("PK"))
    .drop("value", "PK")
  writeToSQLDB(df_temp, "PICKUP_TO_DELIVERY.PACKAGE_BATCH_CARD")
}


def packageBatchCardPartnerInformation(df: DataFrame) = {
  val df_temp = df
    .withColumn("PARTNER_ROLE", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/role/text()')"))
    .withColumn("PARTNER_ROLE",concat_ws(",",col("PARTNER_ROLE")))
    .withColumn("POST_NUMBER", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/partner/postNumber/text()')"))
    .withColumn("POST_NUMBER",concat_ws(",",col("POST_NUMBER")))
    .withColumn("FIRST_NAME", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/partner/firstName/text()')"))
    .withColumn("FIRST_NAME",concat_ws(",",col("FIRST_NAME")))
    .withColumn("NAME", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/partner/firstName/text()')"))
    .withColumn("NAME",concat_ws(",",col("NAME")))
    .withColumn("NAMING_AFFIX", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/partner/namingAffix/text()')"))
    .withColumn("NAMING_AFFIX",concat_ws(",",col("NAMING_AFFIX")))
    .withColumn("CONTACT_OPPORTUNITY", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/contactOpportunity/text()')"))
    .withColumn("CONTACT_OPPORTUNITY",concat_ws(",",col("CONTACT_OPPORTUNITY")))
    .withColumn("PARTNER_ADDITIONAL_INFORMATION", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/partner/additionalInformation/text()')"))
    .withColumn("PARTNER_ADDITIONAL_INFORMATION",concat_ws(",",col("PARTNER_ADDITIONAL_INFORMATION")))
    .withColumn("LOCATION_ADDITIONAL_INFORMATION", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/additionalInformation/text()')"))
    .withColumn("LOCATION_ADDITIONAL_INFORMATION",concat_ws(",",col("LOCATION_ADDITIONAL_INFORMATION")))
    .withColumn("ADDRESS_TYPE", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/type/text()')"))
    .withColumn("ADDRESS_TYPE",concat_ws(",",col("ADDRESS_TYPE")))
    .withColumn("ADDRESS_ADDITION", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/addressAddition/text()')"))
    .withColumn("ADDRESS_ADDITION",concat_ws(",",col("ADDRESS_ADDITION")))
    .withColumn("STREET", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/street/text()')"))
    .withColumn("STREET",concat_ws(",",col("STREET")))
    .withColumn("HOUSE_NUMBER", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/houseNumber/text()')"))
    .withColumn("HOUSE_NUMBER",concat_ws(",",col("HOUSE_NUMBER")))
    .withColumn("HOUSE_NUMBER_ADDITION", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/houseNumberAddition/text()')"))
    .withColumn("HOUSE_NUMBER_ADDITION",concat_ws(",",col("HOUSE_NUMBER_ADDITION")))
    .withColumn("POST_OFFICE_BOX", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/postOfficeBox/text()')"))
    .withColumn("POST_OFFICE_BOX",concat_ws(",",col("POST_OFFICE_BOX")))
    .withColumn("ZIP", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/zip/text()')"))
    .withColumn("ZIP",concat_ws(",",col("ZIP")))
    .withColumn("CITY", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/city/text()')"))
    .withColumn("CITY",concat_ws(",",col("CITY")))
    .withColumn("STATE_CODE", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/stateCode/text()')"))
    .withColumn("STATE_CODE",concat_ws(",",col("STATE_CODE")))
    .withColumn("COUNTRY_CODE", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/location/address/countryCode/text()')"))
    .withColumn("COUNTRY_CODE",concat_ws(",",col("COUNTRY_CODE")))
    .withColumn("EMAIL",lit(""))
    // .withColumn("EMAIL", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/contactOpportunity/[@type='EMAIL_1']/value/text()')"))
    // .withColumn("EMAIL",concat_ws(",",col("EMAIL")))
    .withColumn("SMS",lit(""))
    // .withColumn("SMS", expr("xpath(value, 'packageNotification/packageBatchCard/partnerInformation/contactOpportunity/[@type='SMS_1']/value/text()')"))
    // .withColumn("SMS",concat_ws(",",col("SMS")))
    .withColumn("CUSTOMER_IDENTIFICATION_STATUS", expr("xpath(value, 'packageBatchCard/partnerInformation/partner/additionalInformation/customerIdentificationStatus/text()')"))
    .withColumn("CUSTOMER_IDENTIFICATION_STATUS",concat_ws(",",col("CUSTOMER_IDENTIFICATION_STATUS")))
    .withColumn("ADDRESSED_DELIVERY_CHANNEL", expr("xpath(value, 'packageBatchCard/partnerInformation/location/additionalInformation/addressedDeliveryChannel/text()')"))
    .withColumn("ADDRESSED_DELIVERY_CHANNEL",concat_ws(",",col("ADDRESSED_DELIVERY_CHANNEL")))
    .withColumn("NNH_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "BCP_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.PACKAGE_BATCH_CARD_PARTNER_INFORMATION")
}


def packageBatchCardRoutingInformation(df: DataFrame) = {
  val df_temp = df
    .withColumn("ROUTING_INFORMATION_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/type/text()')"))
    .withColumn("ROUTING_INFORMATION_TYPE",concat_ws(",",col("ROUTING_INFORMATION_TYPE")))
    .withColumn("ROUTING_INFORMATION_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("ROUTING_INFORMATION_CODE",concat_ws(",",col("ROUTING_INFORMATION_CODE")))
    .withColumn("COUNTRY_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("COUNTRY_CODE",concat_ws(",",col("COUNTRY_CODE")))
    .withColumn("ZIP_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("ZIP_CODE",concat_ws(",",col("ZIP_CODE")))
    .withColumn("HOUSE_NUMBER_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("HOUSE_NUMBER_CODE",concat_ws(",",col("HOUSE_NUMBER_CODE")))
    .withColumn("STREET_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("STREET_CODE",concat_ws(",",col("STREET_CODE")))
    .withColumn("PRODUCT_CODE_NATIONAL", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("PRODUCT_CODE_NATIONAL",concat_ws(",",col("PRODUCT_CODE_NATIONAL")))
    .withColumn("PRODUCT_CODE_INTERNATIONAL", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("PRODUCT_CODE_INTERNATIONAL",concat_ws(",",col("PRODUCT_CODE_INTERNATIONAL")))
    .withColumn("FEATURE_CODE_INTERNATIONAL", expr("xpath(value, '/packageNotification/packageBatchCard/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("FEATURE_CODE_INTERNATIONAL",concat_ws(",",col("FEATURE_CODE_INTERNATIONAL")))
    .withColumn("BCP_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "BCR_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.PACKAGE_BATCH_CARD_ROUTING_INFORMATION")
}


def packageBatchCardValueAddedService(df: DataFrame) = {
  val df_temp = df
    .withColumn("SERVICE_ABBREVIATION", expr("xpath(value, '/packageNotification/packageBatchCard/additionalInformation/services/service/text()')"))
    .withColumn("SERVICE_ABBREVIATION",concat_ws(",",col("SERVICE_ABBREVIATION")))
    .withColumn("SERVICE_SOURCE_DSTID", expr("xpath(value, '/packageNotification/packageBatchCard/additionalInformation/services/service/sourceDstid/text()')"))
    .withColumn("SERVICE_SOURCE_DSTID",concat_ws(",",col("SERVICE_SOURCE_DSTID")))
    .withColumn("SERVICE_SOURCE_ODS_EVENT_ID", expr("xpath(value, '/packageNotification/packageBatchCard/additionalInformation/services/service/sourceEventUuid/text()')"))
    .withColumn("SERVICE_SOURCE_ODS_EVENT_ID",concat_ws(",",col("SERVICE_SOURCE_ODS_EVENT_ID")))
    .withColumn("SERVICE_STATUS", expr("xpath(value, '/packageNotification/packageBatchCard/additionalInformation/services/service/serviceStatus/text()')"))
    .withColumn("SERVICE_STATUS",concat_ws(",",col("SERVICE_STATUS")))
    .withColumn("NNH_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "BCS_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.PACKAGE_BATCH_CARD_VALUE_ADDED_SERVICE")
}

def partnerInformation(df: DataFrame) = {
  val df_temp = df
    .withColumn("SHIPMENT_PARTNER_INFORMATION_FLAG", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/partnerInformation/text()')"))
    .withColumn("SHIPMENT_PARTNER_INFORMATION_FLAG",concat_ws(",",col("SHIPMENT_PARTNER_INFORMATION_FLAG")))
    .withColumn("SHIPMENT_PARTNER_INFORMATION_FLAG", regexp_replace($"SHIPMENT_PARTNER_INFORMATION_FLAG", "true", "1"))
    .withColumn("SHIPMENT_PARTNER_INFORMATION_FLAG", regexp_replace($"SHIPMENT_PARTNER_INFORMATION_FLAG", "false", "0"))
    .withColumn("SHIPMENT_PARTNER_INFORMATION_FLAG", $"SHIPMENT_PARTNER_INFORMATION_FLAG".cast("int"))
    .withColumn("CONTACT_PERSON", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/contactPerson/text()')"))
    .withColumn("CONTACT_PERSON",concat_ws(",",col("CONTACT_PERSON")))
    .withColumn("ADDITIONAL_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/additionalInformation/text()')"))
    .withColumn("ADDITIONAL_INFORMATION",concat_ws(",",col("ADDITIONAL_INFORMATION")))
    .withColumn("DISTRIBUTION_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/additionalInformation/distributionCode/text()')"))
    .withColumn("DISTRIBUTION_CODE",concat_ws(",",col("DISTRIBUTION_CODE")))
    .withColumn("EKP", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionFacility/number/@type')"))
    .withColumn("EKP",concat_ws(",",col("EKP")))
    .withColumn("EMPLOYEE_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/employeeId/text()')"))
    .withColumn("EMPLOYEE_ID",concat_ws(",",col("EMPLOYEE_ID")))
    .withColumn("POST_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/postNumber/text()')"))
    .withColumn("POST_NUMBER",concat_ws(",",col("POST_NUMBER")))
    .withColumn("FIRST_NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/firstName/text()')"))
    .withColumn("FIRST_NAME",concat_ws(",",col("FIRST_NAME")))
    .withColumn("NAME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/name/text()')"))
    .withColumn("NAME",concat_ws(",",col("NAME")))
    .withColumn("NAMING_AFFIX", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/namingAffix/text()')"))
    .withColumn("NAMING_AFFIX",concat_ws(",",col("NAMING_AFFIX")))
    .withColumn("PARTNER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packagetInformation/partnerInformation/partner/partnerType/text()')"))
    .withColumn("PARTNER_TYPE",concat_ws(",",col("PARTNER_TYPE")))
    .withColumn("PARTNER_CLASSIFICATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/addressAddition/text()')"))
    .withColumn("PARTNER_CLASSIFICATION",concat_ws(",",col("PARTNER_CLASSIFICATION")))
    .withColumn("CLIENT_ACCOUNT_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/clientAccountNumber/text()')"))
    .withColumn("CLIENT_ACCOUNT_NUMBER",concat_ws(",",col("CLIENT_ACCOUNT_NUMBER")))
    .withColumn("DATE_OF_BIRTH", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/dateOfBirth/text()')"))
    .withColumn("DATE_OF_BIRTH",concat_ws(",",col("DATE_OF_BIRTH")))
    .withColumn("PLACE_OF_BIRTH", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/placeOfBirth/text()')"))
    .withColumn("PLACE_OF_BIRTH",concat_ws(",",col("PLACE_OF_BIRTH")))
    .withColumn("NATIONALITY", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packagetInformation/partnerInformation/partner/nationality/text()')"))
    .withColumn("NATIONALITY",concat_ws(",",col("NATIONALITY")))
    .withColumn("ORGANISATION_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/organisationId/text()')"))
    .withColumn("ORGANISATION_ID",concat_ws(",",col("ORGANISATION_ID")))
    .withColumn("VAT_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/vatId/text()')"))
    .withColumn("VAT_ID",concat_ws(",",col("VAT_ID")))
    .withColumn("CONTACT_OPPORTUNITY", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/contactOpportunity/text()')"))
    .withColumn("CONTACT_OPPORTUNITY",concat_ws(",",col("CONTACT_OPPORTUNITY")))
    .withColumn("PARTNER_ADDITIONAL_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/partner/additionalInformation/text()')"))
    .withColumn("PARTNER_ADDITIONAL_INFORMATION",concat_ws(",",col("PARTNER_ADDITIONAL_INFORMATION")))
    .withColumn("LOCATION_ADDITIONAL_INFORMATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/additionalInformation/text()')"))
    .withColumn("LOCATION_ADDITIONAL_INFORMATION",concat_ws(",",col("LOCATION_ADDITIONAL_INFORMATION")))
    .withColumn("LOCATION_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/id/text()')"))
    .withColumn("LOCATION_ID",concat_ws(",",col("LOCATION_ID")))
    .withColumn("LARGE_CUSTOMER_ZIP", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/largeCustomerZip/text()')"))
    .withColumn("LARGE_CUSTOMER_ZIP",concat_ws(",",col("LARGE_CUSTOMER_ZIP")))
    .withColumn("SERVICE_DISTRICT_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/partnerInformation/location/serviceDistrict/@type')"))
    .withColumn("SERVICE_DISTRICT_TYPE",concat_ws(",",col("SERVICE_DISTRICT_TYPE")))
    .withColumn("SERVICE_DISTRICT_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/shipmentInformation/partnerInformation/location/serviceDistrict/@value')"))
    .withColumn("SERVICE_DISTRICT_VALUE",concat_ws(",",col("SERVICE_DISTRICT_VALUE")))
    .withColumn("PRODUCTION_LOCATION_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionLocationCode/text()')"))
    .withColumn("PRODUCTION_LOCATION_CODE",concat_ws(",",col("PRODUCTION_LOCATION_CODE")))
    .withColumn("PRODUCTION_LOCATION_ROUTING_REGION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionLocationCode/routingRegion/text()')"))
    .withColumn("PRODUCTION_LOCATION_ROUTING_REGION",concat_ws(",",col("PRODUCTION_LOCATION_ROUTING_REGION")))
    .withColumn("PRODUCTION_LOCATION_LOCATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionLocationCode/location/text()')"))
    .withColumn("PRODUCTION_LOCATION_LOCATION",concat_ws(",",col("PRODUCTION_LOCATION_LOCATION")))
    .withColumn("PRODUCTION_LOCATION_CODE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionLocationCode/codeNumber/text()')"))
    .withColumn("PRODUCTION_LOCATION_CODE_NUMBER",concat_ws(",",col("PRODUCTION_LOCATION_CODE_NUMBER")))
    .withColumn("PRODUCTION_LOCATION_PROCESS_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionLocationCode/processCode/text()')"))
    .withColumn("PRODUCTION_LOCATION_PROCESS_CODE",concat_ws(",",col("PRODUCTION_LOCATION_PROCESS_CODE")))
    .withColumn("GPS_LONGITUDE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/gpsCoordinates/longitude/text()')"))
    .withColumn("GPS_LONGITUDE",concat_ws(",",col("GPS_LONGITUDE")))
    .withColumn("GPS_LATITUDE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/gpsCoordinates/latitude/text()')"))
    .withColumn("GPS_LATITUDE",concat_ws(",",col("GPS_LATITUDE")))
    .withColumn("ADDRESS_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/type/text()')"))
    .withColumn("ADDRESS_TYPE",concat_ws(",",col("ADDRESS_TYPE")))
    .withColumn("ADDRESS_ADDITION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/addressAddition/text()')"))
    .withColumn("ADDRESS_ADDITION",concat_ws(",",col("ADDRESS_ADDITION")))
    .withColumn("STREET", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/street/text()')"))
    .withColumn("STREET",concat_ws(",",col("STREET")))
    .withColumn("HOUSE_NUMBER", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/houseNumber/text()')"))
    .withColumn("HOUSE_NUMBER",concat_ws(",",col("HOUSE_NUMBER")))
    .withColumn("HOUSE_NUMBER_ADDITION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/houseNumberAddition/text()')"))
    .withColumn("HOUSE_NUMBER_ADDITION",concat_ws(",",col("HOUSE_NUMBER_ADDITION")))
    .withColumn("POST_OFFICE_BOX", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/postOfficeBox/text()')"))
    .withColumn("POST_OFFICE_BOX",concat_ws(",",col("POST_OFFICE_BOX")))
    .withColumn("ZIP", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/zip/text()')"))
    .withColumn("ZIP",concat_ws(",",col("ZIP")))
    .withColumn("CITY", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/city/text()')"))
    .withColumn("CITY",concat_ws(",",col("CITY")))
    .withColumn("DISTRICT", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/district/text()')"))
    .withColumn("DISTRICT",concat_ws(",",col("DISTRICT")))
    .withColumn("STATE_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/stateCode/text()')"))
    .withColumn("STATE_CODE",concat_ws(",",col("STATE_CODE")))
    .withColumn("COUNTRY_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/address/countryCode/text()')"))
    .withColumn("COUNTRY_CODE",concat_ws(",",col("COUNTRY_CODE")))
    //.withColumn("EMAIL", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/contactOpportunity[type='EMAIL_1']/value/text()')"))
    //.withColumn("EMAIL",concat_ws(",",col("EMAIL")))
    //.withColumn("SMS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/contactOpportunity[type='SMSL_1']/value/text()')"))
    //.withColumn("SMS",concat_ws(",",col("SMS")))
    .withColumn("PARTNER_ROLE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/role/text()')"))
    .withColumn("PARTNER_ROLE",concat_ws(",",col("PARTNER_ROLE")))
    .withColumn("PRODUCTION_FACILITY_RIO_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionFacility/rioId/text()')"))
    .withColumn("PRODUCTION_FACILITY_RIO_ID",concat_ws(",",col("PRODUCTION_FACILITY_RIO_ID")))
    .withColumn("PRODUCTION_FACILITY_NUMBER_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionFacility/number/@type')"))
    .withColumn("PRODUCTION_FACILITY_NUMBER_TYPE",concat_ws(",",col("PRODUCTION_FACILITY_NUMBER_TYPE")))
    .withColumn("PRODUCTION_FACILITY_NUMBER_VALUE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionFacility/number/@value')"))
    .withColumn("PRODUCTION_FACILITY_NUMBER_VALUE",concat_ws(",",col("PRODUCTION_FACILITY_NUMBER_VALUE")))
    .withColumn("PRODUCTION_FACILITY_NUMBER_STATUS", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionFacility/number/@status')"))
    .withColumn("PRODUCTION_FACILITY_NUMBER_STATUS",concat_ws(",",col("PRODUCTION_FACILITY_NUMBER_STATUS")))
    .withColumn("PRODUCTION_FACILITY_DESCRIPTION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/productionFacility/description/text()')"))
    .withColumn("PRODUCTION_FACILITY_DESCRIPTION",concat_ws(",",col("PRODUCTION_FACILITY_DESCRIPTION")))
    .withColumn("CTE_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "PIN_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.PARTNER_INFORMATION")
}

def partnerRoutingInformation(df: DataFrame) = {
  val df_temp = df
    .withColumn("ROUTING_INFORMATION_TYPE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/type/text()')"))
    .withColumn("ROUTING_INFORMATION_TYPE",concat_ws(",",col("ROUTING_INFORMATION_TYPE")))
    .withColumn("ROUTING_INFORMATION_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("ROUTING_INFORMATION_CODE",concat_ws(",",col("ROUTING_INFORMATION_CODE")))
    .withColumn("COUNTRY_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("COUNTRY_CODE",concat_ws(",",col("COUNTRY_CODE")))
    .withColumn("ZIP_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("ZIP_CODE",concat_ws(",",col("ZIP_CODE")))
    .withColumn("HOUSE_NUMBER_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("HOUSE_NUMBER_CODE",concat_ws(",",col("HOUSE_NUMBER_CODE")))
    .withColumn("STREET_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("STREET_CODE",concat_ws(",",col("STREET_CODE")))
    .withColumn("PRODUCT_CODE_NATIONAL", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("PRODUCT_CODE_NATIONAL",concat_ws(",",col("PRODUCT_CODE_NATIONAL")))
    .withColumn("PRODUCT_CODE_INTERNATIONAL", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("PRODUCT_CODE_INTERNATIONAL",concat_ws(",",col("PRODUCT_CODE_INTERNATIONAL")))
    .withColumn("FEATURE_CODE_INTERNATIONAL", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/partnerInformation/location/routingInformation/code/text()')"))
    .withColumn("FEATURE_CODE_INTERNATIONAL",concat_ws(",",col("FEATURE_CODE_INTERNATIONAL")))
    .withColumn("PIN_ID", col("PK"))
    .drop("value", "PK")
 
  val dfWithKey = addHashColumn(df_temp, "PRI_ID")
  writeToSQLDB(dfWithKey, "PICKUP_TO_DELIVERY.PARTNER_ROUTING_INFORMATION")
}

def sollwegEdge(df: DataFrame) = {
  val df_temp = df
    .withColumn("EDGE_ID", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/startSegment/edgeId/text()')"))
    .withColumn("EDGE_ID",concat_ws(",",col("EDGE_ID")))
    .withColumn("NODE_CUT_OFF_DTM", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/distributionTarget/tour/date/text()')"))
    .withColumn("NODE_CUT_OFF_DTM",concat_ws(",",col("NODE_CUT_OFF_DTM")))
    .withColumn("NODE_CUT_OFF_TIME", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/distributionTarget/tour/cutOff/text()')"))
    .withColumn("NODE_CUT_OFF_TIME",concat_ws(",",col("NODE_CUT_OFF_TIME")))
    .withColumn("PRODUCT_CODE", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/distributionTarget/tour/productCode/text()')"))
    .withColumn("PRODUCT_CODE",concat_ws(",",col("PRODUCT_CODE")))
    .withColumn("TRANSPORTATION_DURATION", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/computedRouteParameter/startNode/additionalInformation/distributionTarget/tour/duration/text()')"))
    .withColumn("TRANSPORTATION_DURATION",concat_ws(",",col("TRANSPORTATION_DURATION")))
    .withColumn("NEXT_NODE_DISPOSITIVE_DTM", expr("xpath(value, '/packageNotification/packageBatchCard/events/event/packageInformation/computedRouteReceipt/startSegment/dispositiveDate/text()')"))
    .withColumn("NEXT_NODE_DISPOSITIVE_DTM",concat_ws(",",col("NEXT_NODE_DISPOSITIVE_DTM")))
    .drop("value", "PK")
  writeToSQLDB(df_temp, "PICKUP_TO_DELIVERY.SOLLWEG_EDGE")
}



def addHashColumn(df_tmp: DataFrame, newColName: String): DataFrame = {
  val columns = df_tmp.columns.map(col)
  
  df_tmp.withColumn(newColName, xxhash64(columns:_*))
} 
